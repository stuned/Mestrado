{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/stuned/Mestrado/blob/main/Merge%20Infos%20Movies%20and%20Tweets\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SVGjxYlgyNSS"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q1pL3t8OQJZY",
        "outputId": "8e62e102-843d-4ad8-fe33-18d4445de6da"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4541413 entries, 0 to 4541412\n",
            "Data columns (total 31 columns):\n",
            " #   Column                 Dtype  \n",
            "---  ------                 -----  \n",
            " 0   Unnamed: 0             object \n",
            " 1   datetime               object \n",
            " 2   tweet_id               object \n",
            " 3   text                   object \n",
            " 4   username               object \n",
            " 5   reply_count            int64  \n",
            " 6   retweet_count          int64  \n",
            " 7   like_count             int64  \n",
            " 8   quote_count            int64  \n",
            " 9   language               object \n",
            " 10  id_if_retweeted_tweet  float64\n",
            " 11  id_if_quoted_tweet     object \n",
            " 12  filename               object \n",
            " 13  result_emotion         object \n",
            " 14  result_sentiment       object \n",
            " 15  label_emotion          object \n",
            " 16  anger                  float64\n",
            " 17  anticipation           float64\n",
            " 18  disgust                float64\n",
            " 19  fear                   float64\n",
            " 20  joy                    float64\n",
            " 21  love                   float64\n",
            " 22  optimism               float64\n",
            " 23  pessimism              float64\n",
            " 24  sadness                float64\n",
            " 25  surprise               float64\n",
            " 26  trust                  float64\n",
            " 27  label_sentiment        object \n",
            " 28  negative               float64\n",
            " 29  neutral                float64\n",
            " 30  positive               float64\n",
            "dtypes: float64(15), int64(4), object(12)\n",
            "memory usage: 1.0+ GB\n"
          ]
        }
      ],
      "source": [
        "tweets_filtrados_csv = pd.read_csv ('/content/drive/MyDrive/Mestrado/mestrado - base de dados/base_completa_separada_filtrada.csv', dtype = {'Unnamed: 0': str, 'datetime': str, 'tweet_id': str, 'text': str, 'username': str, 'reply_count': int, 'retweet_count': int, 'like_count': int, 'quote_count': int,\n",
        "                                                                                                                                             'language': str, 'id_if_retweetd_tweet': str, 'id_if_quoted_tweet': str, 'filename': str, 'result_emotion': str, 'result_sentiment': str,'label_emotion': str,'anger': float,'anticipation': float,'disgust': float,'fear': float,'joy': float,\n",
        "                                                                                                                                             'love': float,'optimism': float,'pessimism': float,'sadness': float, 'surprise': float, 'trust': float, 'label_sentiment': str, 'negative': float, 'neutral': float,  'positive': float},\n",
        "                                    engine='python',encoding='utf-8', on_bad_lines='skip')\n",
        "tweets_filtrados_csv.info()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_filtrados_csv = tweets_filtrados_csv.astype({\"id_if_retweeted_tweet\": str})"
      ],
      "metadata": {
        "id": "Tm7lsNMkD602"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_filtrados_csv.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vcfo8i6PEq8k",
        "outputId": "7ba79635-bdd2-429a-bae4-82c203f3129c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4541413 entries, 0 to 4541412\n",
            "Data columns (total 31 columns):\n",
            " #   Column                 Dtype  \n",
            "---  ------                 -----  \n",
            " 0   Unnamed: 0             object \n",
            " 1   datetime               object \n",
            " 2   tweet_id               object \n",
            " 3   text                   object \n",
            " 4   username               object \n",
            " 5   reply_count            int64  \n",
            " 6   retweet_count          int64  \n",
            " 7   like_count             int64  \n",
            " 8   quote_count            int64  \n",
            " 9   language               object \n",
            " 10  id_if_retweeted_tweet  object \n",
            " 11  id_if_quoted_tweet     object \n",
            " 12  filename               object \n",
            " 13  result_emotion         object \n",
            " 14  result_sentiment       object \n",
            " 15  label_emotion          object \n",
            " 16  anger                  float64\n",
            " 17  anticipation           float64\n",
            " 18  disgust                float64\n",
            " 19  fear                   float64\n",
            " 20  joy                    float64\n",
            " 21  love                   float64\n",
            " 22  optimism               float64\n",
            " 23  pessimism              float64\n",
            " 24  sadness                float64\n",
            " 25  surprise               float64\n",
            " 26  trust                  float64\n",
            " 27  label_sentiment        object \n",
            " 28  negative               float64\n",
            " 29  neutral                float64\n",
            " 30  positive               float64\n",
            "dtypes: float64(14), int64(4), object(13)\n",
            "memory usage: 1.0+ GB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LxgedtQ1yPWu",
        "outputId": "015f0afc-9d3e-4faf-8d3b-57977a3da0a9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Unnamed: 0                   datetime             tweet_id  \\\n",
              "0          1  2018-09-10 15:50:31+00:00  1039179320802074629   \n",
              "1          4  2018-09-10 15:50:13+00:00  1039179244453093376   \n",
              "2          7  2018-09-10 15:49:50+00:00  1039179149271855106   \n",
              "3          8  2018-09-10 15:49:46+00:00  1039179130779000832   \n",
              "4         15  2018-09-10 15:49:01+00:00  1039178942266134528   \n",
              "\n",
              "                                                text       username  \\\n",
              "0  What Does the Demon Nun From ‘The Nun’ Really ...     ReelTalker   \n",
              "1  I liked a @YouTube video https://t.co/41senMHN...  charles_leroy   \n",
              "2              The nun was trash, don’t recommend it    thecolehall   \n",
              "3  The Nun Scores Franchise-Best Opening Of $53.5...    ReelTalkInc   \n",
              "4                                The Nun was good...   MiranShamall   \n",
              "\n",
              "   reply_count  retweet_count  like_count  quote_count language  ...  \\\n",
              "0            0              0           0            0       en  ...   \n",
              "1            0              0           0            0       en  ...   \n",
              "2            0              0           4            1       en  ...   \n",
              "3            0              0           0            0       en  ...   \n",
              "4            1              0           6            0       en  ...   \n",
              "\n",
              "       love  optimism pessimism   sadness  surprise     trust  \\\n",
              "0  0.002552  0.013622  0.026849  0.036413  0.063736  0.012882   \n",
              "1  0.008801  0.040079  0.000764  0.000787  0.016700  0.012430   \n",
              "2  0.000084  0.000150  0.002390  0.031029  0.000346  0.000087   \n",
              "3  0.004617  0.042036  0.000256  0.000382  0.004809  0.004574   \n",
              "4  0.002300  0.056620  0.000129  0.000242  0.001398  0.001736   \n",
              "\n",
              "   label_sentiment  negative   neutral  positive  \n",
              "0          neutral  0.092099  0.891713  0.016188  \n",
              "1         positive  0.002575  0.086332  0.911093  \n",
              "2         negative  0.936211  0.055018  0.008771  \n",
              "3         positive  0.004163  0.310942  0.684895  \n",
              "4         positive  0.007631  0.084565  0.907804  \n",
              "\n",
              "[5 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-21f6800c-7be2-4d3a-a003-c8a2b7352f28\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>datetime</th>\n",
              "      <th>tweet_id</th>\n",
              "      <th>text</th>\n",
              "      <th>username</th>\n",
              "      <th>reply_count</th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>like_count</th>\n",
              "      <th>quote_count</th>\n",
              "      <th>language</th>\n",
              "      <th>...</th>\n",
              "      <th>love</th>\n",
              "      <th>optimism</th>\n",
              "      <th>pessimism</th>\n",
              "      <th>sadness</th>\n",
              "      <th>surprise</th>\n",
              "      <th>trust</th>\n",
              "      <th>label_sentiment</th>\n",
              "      <th>negative</th>\n",
              "      <th>neutral</th>\n",
              "      <th>positive</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2018-09-10 15:50:31+00:00</td>\n",
              "      <td>1039179320802074629</td>\n",
              "      <td>What Does the Demon Nun From ‘The Nun’ Really ...</td>\n",
              "      <td>ReelTalker</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.002552</td>\n",
              "      <td>0.013622</td>\n",
              "      <td>0.026849</td>\n",
              "      <td>0.036413</td>\n",
              "      <td>0.063736</td>\n",
              "      <td>0.012882</td>\n",
              "      <td>neutral</td>\n",
              "      <td>0.092099</td>\n",
              "      <td>0.891713</td>\n",
              "      <td>0.016188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4</td>\n",
              "      <td>2018-09-10 15:50:13+00:00</td>\n",
              "      <td>1039179244453093376</td>\n",
              "      <td>I liked a @YouTube video https://t.co/41senMHN...</td>\n",
              "      <td>charles_leroy</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.008801</td>\n",
              "      <td>0.040079</td>\n",
              "      <td>0.000764</td>\n",
              "      <td>0.000787</td>\n",
              "      <td>0.016700</td>\n",
              "      <td>0.012430</td>\n",
              "      <td>positive</td>\n",
              "      <td>0.002575</td>\n",
              "      <td>0.086332</td>\n",
              "      <td>0.911093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7</td>\n",
              "      <td>2018-09-10 15:49:50+00:00</td>\n",
              "      <td>1039179149271855106</td>\n",
              "      <td>The nun was trash, don’t recommend it</td>\n",
              "      <td>thecolehall</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000084</td>\n",
              "      <td>0.000150</td>\n",
              "      <td>0.002390</td>\n",
              "      <td>0.031029</td>\n",
              "      <td>0.000346</td>\n",
              "      <td>0.000087</td>\n",
              "      <td>negative</td>\n",
              "      <td>0.936211</td>\n",
              "      <td>0.055018</td>\n",
              "      <td>0.008771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8</td>\n",
              "      <td>2018-09-10 15:49:46+00:00</td>\n",
              "      <td>1039179130779000832</td>\n",
              "      <td>The Nun Scores Franchise-Best Opening Of $53.5...</td>\n",
              "      <td>ReelTalkInc</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.004617</td>\n",
              "      <td>0.042036</td>\n",
              "      <td>0.000256</td>\n",
              "      <td>0.000382</td>\n",
              "      <td>0.004809</td>\n",
              "      <td>0.004574</td>\n",
              "      <td>positive</td>\n",
              "      <td>0.004163</td>\n",
              "      <td>0.310942</td>\n",
              "      <td>0.684895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15</td>\n",
              "      <td>2018-09-10 15:49:01+00:00</td>\n",
              "      <td>1039178942266134528</td>\n",
              "      <td>The Nun was good...</td>\n",
              "      <td>MiranShamall</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.002300</td>\n",
              "      <td>0.056620</td>\n",
              "      <td>0.000129</td>\n",
              "      <td>0.000242</td>\n",
              "      <td>0.001398</td>\n",
              "      <td>0.001736</td>\n",
              "      <td>positive</td>\n",
              "      <td>0.007631</td>\n",
              "      <td>0.084565</td>\n",
              "      <td>0.907804</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 31 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21f6800c-7be2-4d3a-a003-c8a2b7352f28')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-21f6800c-7be2-4d3a-a003-c8a2b7352f28 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-21f6800c-7be2-4d3a-a003-c8a2b7352f28');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b8172629-bca6-4ca0-b2d9-cd77e2e21918\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8172629-bca6-4ca0-b2d9-cd77e2e21918')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b8172629-bca6-4ca0-b2d9-cd77e2e21918 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tweets_filtrados_csv"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "tweets_filtrados_csv.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_filtrados_csv['count_valid_tweets'] = np.where(~tweets_filtrados_csv['tweet_id'].isnull(),1,0)\n",
        "tweets_filtrados_csv.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "QjNyipG4hZDv",
        "outputId": "cb38a70c-f52f-4003-e423-a1a6e47d54f0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Unnamed: 0                   datetime             tweet_id  \\\n",
              "0          1  2018-09-10 15:50:31+00:00  1039179320802074629   \n",
              "1          4  2018-09-10 15:50:13+00:00  1039179244453093376   \n",
              "2          7  2018-09-10 15:49:50+00:00  1039179149271855106   \n",
              "3          8  2018-09-10 15:49:46+00:00  1039179130779000832   \n",
              "4         15  2018-09-10 15:49:01+00:00  1039178942266134528   \n",
              "\n",
              "                                                text       username  \\\n",
              "0  What Does the Demon Nun From ‘The Nun’ Really ...     ReelTalker   \n",
              "1  I liked a @YouTube video https://t.co/41senMHN...  charles_leroy   \n",
              "2              The nun was trash, don’t recommend it    thecolehall   \n",
              "3  The Nun Scores Franchise-Best Opening Of $53.5...    ReelTalkInc   \n",
              "4                                The Nun was good...   MiranShamall   \n",
              "\n",
              "   reply_count  retweet_count  like_count  quote_count language  ...  \\\n",
              "0            0              0           0            0       en  ...   \n",
              "1            0              0           0            0       en  ...   \n",
              "2            0              0           4            1       en  ...   \n",
              "3            0              0           0            0       en  ...   \n",
              "4            1              0           6            0       en  ...   \n",
              "\n",
              "   optimism pessimism   sadness  surprise     trust label_sentiment  negative  \\\n",
              "0  0.013622  0.026849  0.036413  0.063736  0.012882         neutral  0.092099   \n",
              "1  0.040079  0.000764  0.000787  0.016700  0.012430        positive  0.002575   \n",
              "2  0.000150  0.002390  0.031029  0.000346  0.000087        negative  0.936211   \n",
              "3  0.042036  0.000256  0.000382  0.004809  0.004574        positive  0.004163   \n",
              "4  0.056620  0.000129  0.000242  0.001398  0.001736        positive  0.007631   \n",
              "\n",
              "    neutral  positive  count_valid_tweets  \n",
              "0  0.891713  0.016188                   1  \n",
              "1  0.086332  0.911093                   1  \n",
              "2  0.055018  0.008771                   1  \n",
              "3  0.310942  0.684895                   1  \n",
              "4  0.084565  0.907804                   1  \n",
              "\n",
              "[5 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8adef709-0143-4ee7-b4d4-9986dc908f25\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>datetime</th>\n",
              "      <th>tweet_id</th>\n",
              "      <th>text</th>\n",
              "      <th>username</th>\n",
              "      <th>reply_count</th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>like_count</th>\n",
              "      <th>quote_count</th>\n",
              "      <th>language</th>\n",
              "      <th>...</th>\n",
              "      <th>optimism</th>\n",
              "      <th>pessimism</th>\n",
              "      <th>sadness</th>\n",
              "      <th>surprise</th>\n",
              "      <th>trust</th>\n",
              "      <th>label_sentiment</th>\n",
              "      <th>negative</th>\n",
              "      <th>neutral</th>\n",
              "      <th>positive</th>\n",
              "      <th>count_valid_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2018-09-10 15:50:31+00:00</td>\n",
              "      <td>1039179320802074629</td>\n",
              "      <td>What Does the Demon Nun From ‘The Nun’ Really ...</td>\n",
              "      <td>ReelTalker</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.013622</td>\n",
              "      <td>0.026849</td>\n",
              "      <td>0.036413</td>\n",
              "      <td>0.063736</td>\n",
              "      <td>0.012882</td>\n",
              "      <td>neutral</td>\n",
              "      <td>0.092099</td>\n",
              "      <td>0.891713</td>\n",
              "      <td>0.016188</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4</td>\n",
              "      <td>2018-09-10 15:50:13+00:00</td>\n",
              "      <td>1039179244453093376</td>\n",
              "      <td>I liked a @YouTube video https://t.co/41senMHN...</td>\n",
              "      <td>charles_leroy</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.040079</td>\n",
              "      <td>0.000764</td>\n",
              "      <td>0.000787</td>\n",
              "      <td>0.016700</td>\n",
              "      <td>0.012430</td>\n",
              "      <td>positive</td>\n",
              "      <td>0.002575</td>\n",
              "      <td>0.086332</td>\n",
              "      <td>0.911093</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7</td>\n",
              "      <td>2018-09-10 15:49:50+00:00</td>\n",
              "      <td>1039179149271855106</td>\n",
              "      <td>The nun was trash, don’t recommend it</td>\n",
              "      <td>thecolehall</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000150</td>\n",
              "      <td>0.002390</td>\n",
              "      <td>0.031029</td>\n",
              "      <td>0.000346</td>\n",
              "      <td>0.000087</td>\n",
              "      <td>negative</td>\n",
              "      <td>0.936211</td>\n",
              "      <td>0.055018</td>\n",
              "      <td>0.008771</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8</td>\n",
              "      <td>2018-09-10 15:49:46+00:00</td>\n",
              "      <td>1039179130779000832</td>\n",
              "      <td>The Nun Scores Franchise-Best Opening Of $53.5...</td>\n",
              "      <td>ReelTalkInc</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.042036</td>\n",
              "      <td>0.000256</td>\n",
              "      <td>0.000382</td>\n",
              "      <td>0.004809</td>\n",
              "      <td>0.004574</td>\n",
              "      <td>positive</td>\n",
              "      <td>0.004163</td>\n",
              "      <td>0.310942</td>\n",
              "      <td>0.684895</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15</td>\n",
              "      <td>2018-09-10 15:49:01+00:00</td>\n",
              "      <td>1039178942266134528</td>\n",
              "      <td>The Nun was good...</td>\n",
              "      <td>MiranShamall</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>en</td>\n",
              "      <td>...</td>\n",
              "      <td>0.056620</td>\n",
              "      <td>0.000129</td>\n",
              "      <td>0.000242</td>\n",
              "      <td>0.001398</td>\n",
              "      <td>0.001736</td>\n",
              "      <td>positive</td>\n",
              "      <td>0.007631</td>\n",
              "      <td>0.084565</td>\n",
              "      <td>0.907804</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 32 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8adef709-0143-4ee7-b4d4-9986dc908f25')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8adef709-0143-4ee7-b4d4-9986dc908f25 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8adef709-0143-4ee7-b4d4-9986dc908f25');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4768f963-a21a-46b2-8493-af32a690f7ed\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4768f963-a21a-46b2-8493-af32a690f7ed')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4768f963-a21a-46b2-8493-af32a690f7ed button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tweets_filtrados_csv"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_info_data = tweets_filtrados_csv[['count_valid_tweets','datetime', 'tweet_id', 'text', 'username', 'reply_count', 'retweet_count', 'like_count', 'quote_count', 'language', 'id_if_retweeted_tweet', 'id_if_quoted_tweet', 'filename']]\n",
        "tweets_info_data_sum = tweets_info_data.groupby('filename').sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5C8X7e5lFUBz",
        "outputId": "424fedc3-38ff-4b15-802a-bc387c3820a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-c25b13eb5f52>:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n",
            "  tweets_info_data_sum = tweets_info_data.groupby('filename').sum()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_info_data_model = tweets_filtrados_csv[['datetime', 'tweet_id', 'text', 'username', 'language', 'id_if_retweeted_tweet', 'id_if_quoted_tweet', 'filename', 'result_emotion', 'result_sentiment', 'label_emotion', 'anger', 'anticipation', 'disgust', 'fear', 'joy', 'love', 'optimism', 'pessimism', 'sadness', 'surprise', 'trust', 'label_sentiment', 'negative', 'neutral', 'positive']]\n",
        "tweets_info_data_model_mean = tweets_info_data_model.groupby('filename').mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9Un2Ai4kMuZr",
        "outputId": "1115b1a5-2e21-48cf-acf0-08ef1b051108"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-8-09af7f443a56>:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n",
            "  tweets_info_data_model_mean = tweets_info_data_model.groupby('filename').mean()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_info_data_sum.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "RFgyPuKjg34G",
        "outputId": "9b19b6bc-81b6-4d57-9c35-6a1604e01c25"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                     count_valid_tweets  reply_count  \\\n",
              "filename                                                               \n",
              "10-Cloverfield-Lane-sem-retweet.csv               34152         7137   \n",
              "100-Acres-of-Hell-sem-retweet.csv                    29            5   \n",
              "100-Bloody-Acres-sem-retweet.csv                    533           72   \n",
              "13-Sins-sem-retweet.csv                             749           81   \n",
              "1920-London-sem-retweet.csv                        1959          113   \n",
              "\n",
              "                                     retweet_count  like_count  quote_count  \n",
              "filename                                                                     \n",
              "10-Cloverfield-Lane-sem-retweet.csv          18987       49807           16  \n",
              "100-Acres-of-Hell-sem-retweet.csv               14          22            2  \n",
              "100-Bloody-Acres-sem-retweet.csv               195          68            0  \n",
              "13-Sins-sem-retweet.csv                         73         190            0  \n",
              "1920-London-sem-retweet.csv                    484        1142            7  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7542155f-33af-4746-8192-0f9b49e6ea87\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count_valid_tweets</th>\n",
              "      <th>reply_count</th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>like_count</th>\n",
              "      <th>quote_count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>filename</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10-Cloverfield-Lane-sem-retweet.csv</th>\n",
              "      <td>34152</td>\n",
              "      <td>7137</td>\n",
              "      <td>18987</td>\n",
              "      <td>49807</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100-Acres-of-Hell-sem-retweet.csv</th>\n",
              "      <td>29</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100-Bloody-Acres-sem-retweet.csv</th>\n",
              "      <td>533</td>\n",
              "      <td>72</td>\n",
              "      <td>195</td>\n",
              "      <td>68</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13-Sins-sem-retweet.csv</th>\n",
              "      <td>749</td>\n",
              "      <td>81</td>\n",
              "      <td>73</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1920-London-sem-retweet.csv</th>\n",
              "      <td>1959</td>\n",
              "      <td>113</td>\n",
              "      <td>484</td>\n",
              "      <td>1142</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7542155f-33af-4746-8192-0f9b49e6ea87')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7542155f-33af-4746-8192-0f9b49e6ea87 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7542155f-33af-4746-8192-0f9b49e6ea87');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eeabb9be-96dc-4e13-b270-f9422542a427\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eeabb9be-96dc-4e13-b270-f9422542a427')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eeabb9be-96dc-4e13-b270-f9422542a427 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tweets_info_data_sum",
              "summary": "{\n  \"name\": \"tweets_info_data_sum\",\n  \"rows\": 390,\n  \"fields\": [\n    {\n      \"column\": \"filename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 390,\n        \"samples\": [\n          \"7-Witches-sem-retweet.csv\",\n          \"Bad-Samaritan-sem-retweet.csv\",\n          \"Are-We-Not-Cats-sem-retweet.csv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_valid_tweets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48717,\n        \"min\": 1,\n        \"max\": 666937,\n        \"num_unique_values\": 341,\n        \"samples\": [\n          104770,\n          1266,\n          1493\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reply_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14507,\n        \"min\": 0,\n        \"max\": 201893,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          50,\n          1217,\n          7688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"retweet_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45554,\n        \"min\": 0,\n        \"max\": 610350,\n        \"num_unique_values\": 307,\n        \"samples\": [\n          30,\n          3111,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"like_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131403,\n        \"min\": 0,\n        \"max\": 1585020,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          4306,\n          24820,\n          5194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quote_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4883,\n        \"min\": 0,\n        \"max\": 82158,\n        \"num_unique_values\": 144,\n        \"samples\": [\n          662,\n          80,\n          796\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweets_info_data_model_mean.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "iHx8_n_yMwpm",
        "outputId": "2c089336-1180-4956-94ff-7f85d14051a2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                        anger  anticipation   disgust  \\\n",
              "filename                                                                \n",
              "10-Cloverfield-Lane-sem-retweet.csv  0.030253      0.285267  0.030638   \n",
              "100-Acres-of-Hell-sem-retweet.csv    0.038646      0.233765  0.058740   \n",
              "100-Bloody-Acres-sem-retweet.csv     0.036060      0.333602  0.042019   \n",
              "13-Sins-sem-retweet.csv              0.066029      0.227398  0.073734   \n",
              "1920-London-sem-retweet.csv          0.020444      0.291011  0.028198   \n",
              "\n",
              "                                         fear       joy      love  optimism  \\\n",
              "filename                                                                      \n",
              "10-Cloverfield-Lane-sem-retweet.csv  0.067985  0.445574  0.006789  0.059301   \n",
              "100-Acres-of-Hell-sem-retweet.csv    0.489303  0.090981  0.001966  0.032842   \n",
              "100-Bloody-Acres-sem-retweet.csv     0.105184  0.345716  0.006679  0.038713   \n",
              "13-Sins-sem-retweet.csv              0.073973  0.325812  0.004759  0.059715   \n",
              "1920-London-sem-retweet.csv          0.115785  0.407732  0.008393  0.042366   \n",
              "\n",
              "                                     pessimism   sadness  surprise     trust  \\\n",
              "filename                                                                       \n",
              "10-Cloverfield-Lane-sem-retweet.csv   0.006075  0.026837  0.030273  0.011008   \n",
              "100-Acres-of-Hell-sem-retweet.csv     0.010015  0.018099  0.018224  0.007418   \n",
              "100-Bloody-Acres-sem-retweet.csv      0.010059  0.033523  0.037585  0.010859   \n",
              "13-Sins-sem-retweet.csv               0.024430  0.111146  0.024048  0.008956   \n",
              "1920-London-sem-retweet.csv           0.008186  0.033301  0.033105  0.011480   \n",
              "\n",
              "                                     negative   neutral  positive  \n",
              "filename                                                           \n",
              "10-Cloverfield-Lane-sem-retweet.csv  0.102682  0.521475  0.375843  \n",
              "100-Acres-of-Hell-sem-retweet.csv    0.278183  0.608362  0.113455  \n",
              "100-Bloody-Acres-sem-retweet.csv     0.134438  0.628514  0.237049  \n",
              "13-Sins-sem-retweet.csv              0.238670  0.534907  0.226424  \n",
              "1920-London-sem-retweet.csv          0.079013  0.700312  0.220674  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9b7eccc8-5453-4acd-b3eb-aff396a92b72\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>anger</th>\n",
              "      <th>anticipation</th>\n",
              "      <th>disgust</th>\n",
              "      <th>fear</th>\n",
              "      <th>joy</th>\n",
              "      <th>love</th>\n",
              "      <th>optimism</th>\n",
              "      <th>pessimism</th>\n",
              "      <th>sadness</th>\n",
              "      <th>surprise</th>\n",
              "      <th>trust</th>\n",
              "      <th>negative</th>\n",
              "      <th>neutral</th>\n",
              "      <th>positive</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>filename</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10-Cloverfield-Lane-sem-retweet.csv</th>\n",
              "      <td>0.030253</td>\n",
              "      <td>0.285267</td>\n",
              "      <td>0.030638</td>\n",
              "      <td>0.067985</td>\n",
              "      <td>0.445574</td>\n",
              "      <td>0.006789</td>\n",
              "      <td>0.059301</td>\n",
              "      <td>0.006075</td>\n",
              "      <td>0.026837</td>\n",
              "      <td>0.030273</td>\n",
              "      <td>0.011008</td>\n",
              "      <td>0.102682</td>\n",
              "      <td>0.521475</td>\n",
              "      <td>0.375843</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100-Acres-of-Hell-sem-retweet.csv</th>\n",
              "      <td>0.038646</td>\n",
              "      <td>0.233765</td>\n",
              "      <td>0.058740</td>\n",
              "      <td>0.489303</td>\n",
              "      <td>0.090981</td>\n",
              "      <td>0.001966</td>\n",
              "      <td>0.032842</td>\n",
              "      <td>0.010015</td>\n",
              "      <td>0.018099</td>\n",
              "      <td>0.018224</td>\n",
              "      <td>0.007418</td>\n",
              "      <td>0.278183</td>\n",
              "      <td>0.608362</td>\n",
              "      <td>0.113455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100-Bloody-Acres-sem-retweet.csv</th>\n",
              "      <td>0.036060</td>\n",
              "      <td>0.333602</td>\n",
              "      <td>0.042019</td>\n",
              "      <td>0.105184</td>\n",
              "      <td>0.345716</td>\n",
              "      <td>0.006679</td>\n",
              "      <td>0.038713</td>\n",
              "      <td>0.010059</td>\n",
              "      <td>0.033523</td>\n",
              "      <td>0.037585</td>\n",
              "      <td>0.010859</td>\n",
              "      <td>0.134438</td>\n",
              "      <td>0.628514</td>\n",
              "      <td>0.237049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13-Sins-sem-retweet.csv</th>\n",
              "      <td>0.066029</td>\n",
              "      <td>0.227398</td>\n",
              "      <td>0.073734</td>\n",
              "      <td>0.073973</td>\n",
              "      <td>0.325812</td>\n",
              "      <td>0.004759</td>\n",
              "      <td>0.059715</td>\n",
              "      <td>0.024430</td>\n",
              "      <td>0.111146</td>\n",
              "      <td>0.024048</td>\n",
              "      <td>0.008956</td>\n",
              "      <td>0.238670</td>\n",
              "      <td>0.534907</td>\n",
              "      <td>0.226424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1920-London-sem-retweet.csv</th>\n",
              "      <td>0.020444</td>\n",
              "      <td>0.291011</td>\n",
              "      <td>0.028198</td>\n",
              "      <td>0.115785</td>\n",
              "      <td>0.407732</td>\n",
              "      <td>0.008393</td>\n",
              "      <td>0.042366</td>\n",
              "      <td>0.008186</td>\n",
              "      <td>0.033301</td>\n",
              "      <td>0.033105</td>\n",
              "      <td>0.011480</td>\n",
              "      <td>0.079013</td>\n",
              "      <td>0.700312</td>\n",
              "      <td>0.220674</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b7eccc8-5453-4acd-b3eb-aff396a92b72')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9b7eccc8-5453-4acd-b3eb-aff396a92b72 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9b7eccc8-5453-4acd-b3eb-aff396a92b72');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-657ded31-dfd6-4261-9c61-188e70b6ce48\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-657ded31-dfd6-4261-9c61-188e70b6ce48')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-657ded31-dfd6-4261-9c61-188e70b6ce48 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tweets_info_data_model_mean",
              "summary": "{\n  \"name\": \"tweets_info_data_model_mean\",\n  \"rows\": 390,\n  \"fields\": [\n    {\n      \"column\": \"filename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 390,\n        \"samples\": [\n          \"7-Witches-sem-retweet.csv\",\n          \"Bad-Samaritan-sem-retweet.csv\",\n          \"Are-We-Not-Cats-sem-retweet.csv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anger\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0569724879060762,\n        \"min\": 0.0003481737803667,\n        \"max\": 0.3916609585285187,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.029360772460894975,\n          0.03586494808932441,\n          0.0160027600896843\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anticipation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10316147555369655,\n        \"min\": 0.022603444797328915,\n        \"max\": 0.7108712792396545,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.25421772382310653,\n          0.31520378511018693,\n          0.4133597901185139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"disgust\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04437459878837241,\n        \"min\": 0.000536554318387,\n        \"max\": 0.411003440618515,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.026199635404877766,\n          0.036162346956904255,\n          0.032113901875270676\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fear\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12333663178963848,\n        \"min\": 0.00041225341071060004,\n        \"max\": 0.6693328107021645,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.12871464779635342,\n          0.12691110090848723,\n          0.09658768943379122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"joy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1486219080759091,\n        \"min\": 0.01203231350518755,\n        \"max\": 0.9157062967618307,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.4535953168729386,\n          0.3634762225531312,\n          0.3043572702969386\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"love\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.006266834085572283,\n        \"min\": 0.000801269110525,\n        \"max\": 0.06209138322813712,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.008636044312520961,\n          0.006838815156534529,\n          0.005563486996085356\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"optimism\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.059266237434327365,\n        \"min\": 0.0051388489082455,\n        \"max\": 0.7367563240120681,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.03982995871169993,\n          0.061231240760977114,\n          0.0419340361571384\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pessimism\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005238778753187991,\n        \"min\": 0.00035259738797319633,\n        \"max\": 0.03467561112108425,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.0054245593921325155,\n          0.005493925158270506,\n          0.01080157710727204\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sadness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.045688553192561605,\n        \"min\": 0.0004529792058747,\n        \"max\": 0.3223614998294044,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.017777111094763036,\n          0.010726988155666632,\n          0.029100093591938127\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"surprise\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010988607178934701,\n        \"min\": 0.00411922305516251,\n        \"max\": 0.09866779048128849,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.02551315303541007,\n          0.02593426101352979,\n          0.038913247115595004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trust\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0029526573948298017,\n        \"min\": 0.0018282109091450993,\n        \"max\": 0.0217435881495475,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.01073107111856376,\n          0.012156367877223472,\n          0.011266148514336835\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"negative\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10803505652818116,\n        \"min\": 0.00149672769475725,\n        \"max\": 0.8447278738021851,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.04873823834596276,\n          0.11238126882673316,\n          0.04785219327074143\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neutral\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1475559194875155,\n        \"min\": 0.0271002165973186,\n        \"max\": 0.9026002883911132,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.6710422819637707,\n          0.5939902163630065,\n          0.7458797226084725\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"positive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13398074377389188,\n        \"min\": 0.013579580001533,\n        \"max\": 0.9690157175064088,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.2802194877278427,\n          0.2936285161264002,\n          0.2062680854133385\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "movies_full_info = tweets_info_data_sum.join(tweets_info_data_model_mean)\n",
        "movies_full_info.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 518
        },
        "id": "xKn4z3hqaaYh",
        "outputId": "5f605bb9-f392-4a72-ebf4-abf19f5b7564"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                     count_valid_tweets  reply_count  \\\n",
              "filename                                                               \n",
              "10-Cloverfield-Lane-sem-retweet.csv               34152         7137   \n",
              "100-Acres-of-Hell-sem-retweet.csv                    29            5   \n",
              "100-Bloody-Acres-sem-retweet.csv                    533           72   \n",
              "13-Sins-sem-retweet.csv                             749           81   \n",
              "1920-London-sem-retweet.csv                        1959          113   \n",
              "\n",
              "                                     retweet_count  like_count  quote_count  \\\n",
              "filename                                                                      \n",
              "10-Cloverfield-Lane-sem-retweet.csv          18987       49807           16   \n",
              "100-Acres-of-Hell-sem-retweet.csv               14          22            2   \n",
              "100-Bloody-Acres-sem-retweet.csv               195          68            0   \n",
              "13-Sins-sem-retweet.csv                         73         190            0   \n",
              "1920-London-sem-retweet.csv                    484        1142            7   \n",
              "\n",
              "                                        anger  anticipation   disgust  \\\n",
              "filename                                                                \n",
              "10-Cloverfield-Lane-sem-retweet.csv  0.030253      0.285267  0.030638   \n",
              "100-Acres-of-Hell-sem-retweet.csv    0.038646      0.233765  0.058740   \n",
              "100-Bloody-Acres-sem-retweet.csv     0.036060      0.333602  0.042019   \n",
              "13-Sins-sem-retweet.csv              0.066029      0.227398  0.073734   \n",
              "1920-London-sem-retweet.csv          0.020444      0.291011  0.028198   \n",
              "\n",
              "                                         fear       joy      love  optimism  \\\n",
              "filename                                                                      \n",
              "10-Cloverfield-Lane-sem-retweet.csv  0.067985  0.445574  0.006789  0.059301   \n",
              "100-Acres-of-Hell-sem-retweet.csv    0.489303  0.090981  0.001966  0.032842   \n",
              "100-Bloody-Acres-sem-retweet.csv     0.105184  0.345716  0.006679  0.038713   \n",
              "13-Sins-sem-retweet.csv              0.073973  0.325812  0.004759  0.059715   \n",
              "1920-London-sem-retweet.csv          0.115785  0.407732  0.008393  0.042366   \n",
              "\n",
              "                                     pessimism   sadness  surprise     trust  \\\n",
              "filename                                                                       \n",
              "10-Cloverfield-Lane-sem-retweet.csv   0.006075  0.026837  0.030273  0.011008   \n",
              "100-Acres-of-Hell-sem-retweet.csv     0.010015  0.018099  0.018224  0.007418   \n",
              "100-Bloody-Acres-sem-retweet.csv      0.010059  0.033523  0.037585  0.010859   \n",
              "13-Sins-sem-retweet.csv               0.024430  0.111146  0.024048  0.008956   \n",
              "1920-London-sem-retweet.csv           0.008186  0.033301  0.033105  0.011480   \n",
              "\n",
              "                                     negative   neutral  positive  \n",
              "filename                                                           \n",
              "10-Cloverfield-Lane-sem-retweet.csv  0.102682  0.521475  0.375843  \n",
              "100-Acres-of-Hell-sem-retweet.csv    0.278183  0.608362  0.113455  \n",
              "100-Bloody-Acres-sem-retweet.csv     0.134438  0.628514  0.237049  \n",
              "13-Sins-sem-retweet.csv              0.238670  0.534907  0.226424  \n",
              "1920-London-sem-retweet.csv          0.079013  0.700312  0.220674  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c4d7bbd6-721b-4e0d-a356-925c33a8bf15\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count_valid_tweets</th>\n",
              "      <th>reply_count</th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>like_count</th>\n",
              "      <th>quote_count</th>\n",
              "      <th>anger</th>\n",
              "      <th>anticipation</th>\n",
              "      <th>disgust</th>\n",
              "      <th>fear</th>\n",
              "      <th>joy</th>\n",
              "      <th>love</th>\n",
              "      <th>optimism</th>\n",
              "      <th>pessimism</th>\n",
              "      <th>sadness</th>\n",
              "      <th>surprise</th>\n",
              "      <th>trust</th>\n",
              "      <th>negative</th>\n",
              "      <th>neutral</th>\n",
              "      <th>positive</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>filename</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10-Cloverfield-Lane-sem-retweet.csv</th>\n",
              "      <td>34152</td>\n",
              "      <td>7137</td>\n",
              "      <td>18987</td>\n",
              "      <td>49807</td>\n",
              "      <td>16</td>\n",
              "      <td>0.030253</td>\n",
              "      <td>0.285267</td>\n",
              "      <td>0.030638</td>\n",
              "      <td>0.067985</td>\n",
              "      <td>0.445574</td>\n",
              "      <td>0.006789</td>\n",
              "      <td>0.059301</td>\n",
              "      <td>0.006075</td>\n",
              "      <td>0.026837</td>\n",
              "      <td>0.030273</td>\n",
              "      <td>0.011008</td>\n",
              "      <td>0.102682</td>\n",
              "      <td>0.521475</td>\n",
              "      <td>0.375843</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100-Acres-of-Hell-sem-retweet.csv</th>\n",
              "      <td>29</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "      <td>0.038646</td>\n",
              "      <td>0.233765</td>\n",
              "      <td>0.058740</td>\n",
              "      <td>0.489303</td>\n",
              "      <td>0.090981</td>\n",
              "      <td>0.001966</td>\n",
              "      <td>0.032842</td>\n",
              "      <td>0.010015</td>\n",
              "      <td>0.018099</td>\n",
              "      <td>0.018224</td>\n",
              "      <td>0.007418</td>\n",
              "      <td>0.278183</td>\n",
              "      <td>0.608362</td>\n",
              "      <td>0.113455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100-Bloody-Acres-sem-retweet.csv</th>\n",
              "      <td>533</td>\n",
              "      <td>72</td>\n",
              "      <td>195</td>\n",
              "      <td>68</td>\n",
              "      <td>0</td>\n",
              "      <td>0.036060</td>\n",
              "      <td>0.333602</td>\n",
              "      <td>0.042019</td>\n",
              "      <td>0.105184</td>\n",
              "      <td>0.345716</td>\n",
              "      <td>0.006679</td>\n",
              "      <td>0.038713</td>\n",
              "      <td>0.010059</td>\n",
              "      <td>0.033523</td>\n",
              "      <td>0.037585</td>\n",
              "      <td>0.010859</td>\n",
              "      <td>0.134438</td>\n",
              "      <td>0.628514</td>\n",
              "      <td>0.237049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13-Sins-sem-retweet.csv</th>\n",
              "      <td>749</td>\n",
              "      <td>81</td>\n",
              "      <td>73</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "      <td>0.066029</td>\n",
              "      <td>0.227398</td>\n",
              "      <td>0.073734</td>\n",
              "      <td>0.073973</td>\n",
              "      <td>0.325812</td>\n",
              "      <td>0.004759</td>\n",
              "      <td>0.059715</td>\n",
              "      <td>0.024430</td>\n",
              "      <td>0.111146</td>\n",
              "      <td>0.024048</td>\n",
              "      <td>0.008956</td>\n",
              "      <td>0.238670</td>\n",
              "      <td>0.534907</td>\n",
              "      <td>0.226424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1920-London-sem-retweet.csv</th>\n",
              "      <td>1959</td>\n",
              "      <td>113</td>\n",
              "      <td>484</td>\n",
              "      <td>1142</td>\n",
              "      <td>7</td>\n",
              "      <td>0.020444</td>\n",
              "      <td>0.291011</td>\n",
              "      <td>0.028198</td>\n",
              "      <td>0.115785</td>\n",
              "      <td>0.407732</td>\n",
              "      <td>0.008393</td>\n",
              "      <td>0.042366</td>\n",
              "      <td>0.008186</td>\n",
              "      <td>0.033301</td>\n",
              "      <td>0.033105</td>\n",
              "      <td>0.011480</td>\n",
              "      <td>0.079013</td>\n",
              "      <td>0.700312</td>\n",
              "      <td>0.220674</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4d7bbd6-721b-4e0d-a356-925c33a8bf15')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c4d7bbd6-721b-4e0d-a356-925c33a8bf15 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c4d7bbd6-721b-4e0d-a356-925c33a8bf15');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-40e3e5ff-66c6-4746-ae3f-e08d79a6e03e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40e3e5ff-66c6-4746-ae3f-e08d79a6e03e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-40e3e5ff-66c6-4746-ae3f-e08d79a6e03e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "movies_full_info",
              "summary": "{\n  \"name\": \"movies_full_info\",\n  \"rows\": 390,\n  \"fields\": [\n    {\n      \"column\": \"filename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 390,\n        \"samples\": [\n          \"7-Witches-sem-retweet.csv\",\n          \"Bad-Samaritan-sem-retweet.csv\",\n          \"Are-We-Not-Cats-sem-retweet.csv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count_valid_tweets\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48717,\n        \"min\": 1,\n        \"max\": 666937,\n        \"num_unique_values\": 341,\n        \"samples\": [\n          104770,\n          1266,\n          1493\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reply_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14507,\n        \"min\": 0,\n        \"max\": 201893,\n        \"num_unique_values\": 274,\n        \"samples\": [\n          50,\n          1217,\n          7688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"retweet_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45554,\n        \"min\": 0,\n        \"max\": 610350,\n        \"num_unique_values\": 307,\n        \"samples\": [\n          30,\n          3111,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"like_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 131403,\n        \"min\": 0,\n        \"max\": 1585020,\n        \"num_unique_values\": 342,\n        \"samples\": [\n          4306,\n          24820,\n          5194\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quote_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4883,\n        \"min\": 0,\n        \"max\": 82158,\n        \"num_unique_values\": 144,\n        \"samples\": [\n          662,\n          80,\n          796\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anger\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0569724879060762,\n        \"min\": 0.0003481737803667,\n        \"max\": 0.3916609585285187,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.029360772460894975,\n          0.03586494808932441,\n          0.0160027600896843\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"anticipation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10316147555369655,\n        \"min\": 0.022603444797328915,\n        \"max\": 0.7108712792396545,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.25421772382310653,\n          0.31520378511018693,\n          0.4133597901185139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"disgust\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04437459878837241,\n        \"min\": 0.000536554318387,\n        \"max\": 0.411003440618515,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.026199635404877766,\n          0.036162346956904255,\n          0.032113901875270676\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fear\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12333663178963848,\n        \"min\": 0.00041225341071060004,\n        \"max\": 0.6693328107021645,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.12871464779635342,\n          0.12691110090848723,\n          0.09658768943379122\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"joy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1486219080759091,\n        \"min\": 0.01203231350518755,\n        \"max\": 0.9157062967618307,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.4535953168729386,\n          0.3634762225531312,\n          0.3043572702969386\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"love\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.006266834085572283,\n        \"min\": 0.000801269110525,\n        \"max\": 0.06209138322813712,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.008636044312520961,\n          0.006838815156534529,\n          0.005563486996085356\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"optimism\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.059266237434327365,\n        \"min\": 0.0051388489082455,\n        \"max\": 0.7367563240120681,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.03982995871169993,\n          0.061231240760977114,\n          0.0419340361571384\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pessimism\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005238778753187991,\n        \"min\": 0.00035259738797319633,\n        \"max\": 0.03467561112108425,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.0054245593921325155,\n          0.005493925158270506,\n          0.01080157710727204\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sadness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.045688553192561605,\n        \"min\": 0.0004529792058747,\n        \"max\": 0.3223614998294044,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.017777111094763036,\n          0.010726988155666632,\n          0.029100093591938127\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"surprise\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010988607178934701,\n        \"min\": 0.00411922305516251,\n        \"max\": 0.09866779048128849,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.02551315303541007,\n          0.02593426101352979,\n          0.038913247115595004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trust\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0029526573948298017,\n        \"min\": 0.0018282109091450993,\n        \"max\": 0.0217435881495475,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.01073107111856376,\n          0.012156367877223472,\n          0.011266148514336835\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"negative\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10803505652818116,\n        \"min\": 0.00149672769475725,\n        \"max\": 0.8447278738021851,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.04873823834596276,\n          0.11238126882673316,\n          0.04785219327074143\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"neutral\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1475559194875155,\n        \"min\": 0.0271002165973186,\n        \"max\": 0.9026002883911132,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.6710422819637707,\n          0.5939902163630065,\n          0.7458797226084725\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"positive\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13398074377389188,\n        \"min\": 0.013579580001533,\n        \"max\": 0.9690157175064088,\n        \"num_unique_values\": 390,\n        \"samples\": [\n          0.2802194877278427,\n          0.2936285161264002,\n          0.2062680854133385\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "movies_full_info[movies_full_info  == 'filename'].index.tolist()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M-CPX6REZ-fU",
        "outputId": "2cf5b246-632c-4f70-ff16-d87ba126550c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['10-Cloverfield-Lane-sem-retweet.csv',\n",
              " '100-Acres-of-Hell-sem-retweet.csv',\n",
              " '100-Bloody-Acres-sem-retweet.csv',\n",
              " '13-Sins-sem-retweet.csv',\n",
              " '1920-London-sem-retweet.csv',\n",
              " '3-from-Hell-sem-retweet.csv',\n",
              " '31-sem-retweet.csv',\n",
              " '47-Meters-Down-Uncaged-sem-retweet.csv',\n",
              " '47-Meters-Down-sem-retweet.csv',\n",
              " '7-Witches-sem-retweet.csv',\n",
              " '7-from-Etheria-sem-retweet.csv',\n",
              " 'A-Beginners-Guide-to-Snuff-sem-retweet.csv',\n",
              " 'A-Cure-for-Wellness-sem-retweet.csv',\n",
              " 'A-Field-in-England-sem-retweet.csv',\n",
              " 'A-Girl-Walks-Home-Alone-at-Night-sem-retweet.csv',\n",
              " 'A-Quiet-Place-sem-retweet.csv',\n",
              " 'A-Resurrection-sem-retweet.csv',\n",
              " 'A-Zombie-Invasion-sem-retweet.csv',\n",
              " 'ABCs-of-Death-2-sem-retweet.csv',\n",
              " 'Absence-sem-retweet.csv',\n",
              " 'Afflicted-sem-retweet.csv',\n",
              " 'Aftershock-sem-retweet.csv',\n",
              " 'Alien-Abduction-sem-retweet.csv',\n",
              " 'Alien-Covenant-sem-retweet.csv',\n",
              " 'Almost-Human-sem-retweet.csv',\n",
              " 'Always-Shine-sem-retweet.csv',\n",
              " 'Amityville-The-Awakening-sem-retweet.csv',\n",
              " 'Anna-and-the-Apocalypse-sem-retweet.csv',\n",
              " 'Annabelle-Comes-Home-sem-retweet.csv',\n",
              " 'Annabelle-Creation-sem-retweet.csv',\n",
              " 'Annabelle-sem-retweet.csv',\n",
              " 'Annihilation-sem-retweet.csv',\n",
              " 'Another-WolfCop-sem-retweet.csv',\n",
              " 'Are-We-Not-Cats-sem-retweet.csv',\n",
              " 'Area-51-sem-retweet.csv',\n",
              " 'As-Above-So-Below-sem-retweet.csv',\n",
              " 'Assassination-Nation-sem-retweet.csv',\n",
              " 'Attack-on-Titan-2-sem-retweet.csv',\n",
              " 'Attack-on-Titan-sem-retweet.csv',\n",
              " 'Auto-Shop-of-Horrors-sem-retweet.csv',\n",
              " 'Axe-Giant-The-Wrath-of-Paul-Bunyan-sem-retweet.csv',\n",
              " 'Bad-Milo-sem-retweet.csv',\n",
              " 'Bad-Samaritan-sem-retweet.csv',\n",
              " 'Before-I-Go-to-Sleep-sem-retweet.csv',\n",
              " 'Beloved-Beast-sem-retweet.csv',\n",
              " 'Berlin-Syndrome-sem-retweet.csv',\n",
              " 'Better-Watch-Out-sem-retweet.csv',\n",
              " 'Beyond-Skyline-sem-retweet.csv',\n",
              " 'Big-Bad-Wolves-sem-retweet.csv',\n",
              " 'Black-Christmas-sem-retweet.csv',\n",
              " 'Black-Rock-sem-retweet.csv',\n",
              " 'Blackfoot-Trail-sem-retweet.csv',\n",
              " 'Blair-Witch-sem-retweet.csv',\n",
              " 'Blood-Feast-sem-retweet.csv',\n",
              " 'Blood-Fest-sem-retweet.csv',\n",
              " 'Blumhouses-Truth-or-Dare-sem-retweet.csv',\n",
              " 'Body-at-Brighton-Rock-sem-retweet.csv',\n",
              " 'Boo-2-A-Madea-Halloween-sem-retweet.csv',\n",
              " 'Borgman-sem-retweet.csv',\n",
              " 'Brightburn-sem-retweet.csv',\n",
              " 'But-Deliver-Us-from-Evil-sem-retweet.csv',\n",
              " 'Buzzard-sem-retweet.csv',\n",
              " 'Byzantium-sem-retweet.csv',\n",
              " 'Carrie-sem-retweet.csv',\n",
              " 'Cassadaga-sem-retweet.csv',\n",
              " 'Cell-sem-retweet.csv',\n",
              " 'Cheap-Thrills-sem-retweet.csv',\n",
              " 'Childs-Play-sem-retweet.csv',\n",
              " 'Climax-sem-retweet.csv',\n",
              " 'Clinton-Road-sem-retweet.csv',\n",
              " 'Clown-sem-retweet.csv',\n",
              " 'Coherence-sem-retweet.csv',\n",
              " 'Come-Back-to-Me-sem-retweet.csv',\n",
              " 'Come-Out-and-Play-sem-retweet.csv',\n",
              " 'Contracted-sem-retweet.csv',\n",
              " 'Cooties-sem-retweet.csv',\n",
              " 'Countdown-sem-retweet.csv',\n",
              " 'Crawl-sem-retweet.csv',\n",
              " 'Crimson-Peak-sem-retweet.csv',\n",
              " 'Cynthia-sem-retweet.csv',\n",
              " 'Dark-Awakening-sem-retweet.csv',\n",
              " 'Dark-Forest-sem-retweet.csv',\n",
              " 'Dark-Skies-sem-retweet.csv',\n",
              " 'Darker-Than-Night-sem-retweet.csv',\n",
              " 'Dave-Made-a-Maze-sem-retweet.csv',\n",
              " 'Daylights-End-sem-retweet.csv',\n",
              " 'Dead-Awake-sem-retweet.csv',\n",
              " 'Dead-Snow-2-Red-vs-Dead-sem-retweet.csv',\n",
              " 'Death-House-sem-retweet.csv',\n",
              " 'Deliver-Us-from-Evil-sem-retweet.csv',\n",
              " 'Demon-sem-retweet.csv',\n",
              " 'Demons-sem-retweet.csv',\n",
              " 'Detention-of-the-Dead-sem-retweet.csv',\n",
              " 'Devils-Due-sem-retweet.csv',\n",
              " 'Digging-Up-the-Marrow-sem-retweet.csv',\n",
              " 'Doctor-Sleep-sem-retweet.csv',\n",
              " 'Dont-Breathe-sem-retweet.csv',\n",
              " 'Dont-Hang-Up-sem-retweet.csv',\n",
              " 'Dont-Let-Go-sem-retweet.csv',\n",
              " 'Dracula-Untold-sem-retweet.csv',\n",
              " 'Ek-Thi-Daayan-sem-retweet.csv',\n",
              " 'Eloise-sem-retweet.csv',\n",
              " 'Escape-Room-sem-retweet.csv',\n",
              " 'Escape-from-Tomorrow-sem-retweet.csv',\n",
              " 'Evil-Dead-sem-retweet.csv',\n",
              " 'Evolution-sem-retweet.csv',\n",
              " 'Final-Girl-sem-retweet.csv',\n",
              " 'Flatliners-sem-retweet.csv',\n",
              " 'Freaks-of-Nature-sem-retweet.csv',\n",
              " 'Friend-Request-sem-retweet.csv',\n",
              " 'Gang-of-Ghosts-sem-retweet.csv',\n",
              " 'Ganja-Hess-sem-retweet.csv',\n",
              " 'Get-Out-sem-retweet.csv',\n",
              " 'Ghost-House-sem-retweet.csv',\n",
              " 'Ghost-Stories-sem-retweet.csv',\n",
              " 'Ghost-Team-One-sem-retweet.csv',\n",
              " 'Girls-Against-Boys-sem-retweet.csv',\n",
              " 'Go-Goa-Gone-sem-retweet.csv',\n",
              " 'Golmaal-Again-sem-retweet.csv',\n",
              " 'Gonjiam-Haunted-Asylum-sem-retweet.csv',\n",
              " 'Good-Manners-sem-retweet.csv',\n",
              " 'Goodnight-Mommy-sem-retweet.csv',\n",
              " 'Goosebumps-2-Haunted-Halloween-sem-retweet.csv',\n",
              " 'Goosebumps-sem-retweet.csv',\n",
              " 'Green-Room-sem-retweet.csv',\n",
              " 'Halloween-sem-retweet.csv',\n",
              " 'Hammer-of-the-Gods-sem-retweet.csv',\n",
              " 'Hansel-Gretel-Witch-Hunters-sem-retweet.csv',\n",
              " 'Happy-Death-Day-2U-sem-retweet.csv',\n",
              " 'Happy-Death-Day-sem-retweet.csv',\n",
              " 'Hayride-2-sem-retweet.csv',\n",
              " 'Hell-Baby-sem-retweet.csv',\n",
              " 'Hell-Fest-sem-retweet.csv',\n",
              " 'Hellboy-sem-retweet.csv',\n",
              " 'Here-Comes-the-Devil-sem-retweet.csv',\n",
              " 'Hereditary-sem-retweet.csv',\n",
              " 'Hes-Out-There-sem-retweet.csv',\n",
              " 'Holidays-sem-retweet.csv',\n",
              " 'Holla-II-sem-retweet.csv',\n",
              " 'Holy-Hell-sem-retweet.csv',\n",
              " 'Honeymoon-sem-retweet.csv',\n",
              " 'Horns-sem-retweet.csv',\n",
              " 'Hotel-Transylvania-2-sem-retweet.csv',\n",
              " 'I-Frankenstein-sem-retweet.csv',\n",
              " 'I-Spit-on-Your-Grave-2-sem-retweet.csv',\n",
              " 'Incarnate-sem-retweet.csv',\n",
              " 'Incident-in-a-Ghostland-sem-retweet.csv',\n",
              " 'Innocence-sem-retweet.csv',\n",
              " 'Inside-sem-retweet.csv',\n",
              " 'Insidious-Chapter-2-sem-retweet.csv',\n",
              " 'Insidious-Chapter-3-sem-retweet.csv',\n",
              " 'Insidious-The-Last-Key-sem-retweet.csv',\n",
              " 'It-Chapter-Two-sem-retweet.csv',\n",
              " 'It-Comes-At-Night-sem-retweet.csv',\n",
              " 'It-Follows-sem-retweet.csv',\n",
              " 'It-sem-retweet.csv',\n",
              " 'Jackals-sem-retweet.csv',\n",
              " 'Jeepers-Creepers-III-sem-retweet.csv',\n",
              " 'Jeruzalem-sem-retweet.csv',\n",
              " 'Jessabelle-sem-retweet.csv',\n",
              " 'Jigsaw-sem-retweet.csv',\n",
              " 'Jinn-sem-retweet.csv',\n",
              " 'John-Dies-at-the-End-sem-retweet.csv',\n",
              " 'Journey-to-the-West-sem-retweet.csv',\n",
              " 'Julia-sem-retweet.csv',\n",
              " 'K-12-sem-retweet.csv',\n",
              " 'Kaashmora-sem-retweet.csv',\n",
              " 'Keep-Watching-sem-retweet.csv',\n",
              " 'Kill-Command-sem-retweet.csv',\n",
              " 'Killer-Unicorn-sem-retweet.csv',\n",
              " 'Killers-sem-retweet.csv',\n",
              " 'Kiss-of-the-Damned-sem-retweet.csv',\n",
              " 'Knife-Heart-sem-retweet.csv',\n",
              " 'Knights-of-Badassdom-sem-retweet.csv',\n",
              " 'Krampus-sem-retweet.csv',\n",
              " 'LA-Slasher-sem-retweet.csv',\n",
              " 'Legend-of-the-Mountain-sem-retweet.csv',\n",
              " 'Life-After-Beth-sem-retweet.csv',\n",
              " 'Life-sem-retweet.csv',\n",
              " 'Lights-Out-sem-retweet.csv',\n",
              " 'Like-Me-sem-retweet.csv',\n",
              " 'Little-Monsters-sem-retweet.csv',\n",
              " 'Lizzie-sem-retweet.csv',\n",
              " 'Look-Away-sem-retweet.csv',\n",
              " 'Lords-of-Chaos-sem-retweet.csv',\n",
              " 'Lycan-sem-retweet.csv',\n",
              " 'Ma-sem-retweet.csv',\n",
              " 'Made-Me-Do-It-sem-retweet.csv',\n",
              " 'Maggie-sem-retweet.csv',\n",
              " 'Mama-sem-retweet.csv',\n",
              " 'Mandy-sem-retweet.csv',\n",
              " 'Massacre-on-Aisle-12-sem-retweet.csv',\n",
              " 'Meet-the-Blacks-sem-retweet.csv',\n",
              " 'Mercury-sem-retweet.csv',\n",
              " 'Midget-Zombie-Takeover-sem-retweet.csv',\n",
              " 'Midsommar-sem-retweet.csv',\n",
              " 'Mojin-The-Lost-Legend-sem-retweet.csv',\n",
              " 'Monster-Family-sem-retweet.csv',\n",
              " 'Monsters-Dark-Continent-sem-retweet.csv',\n",
              " 'Morgan-sem-retweet.csv',\n",
              " 'Mother-sem-retweet.csv',\n",
              " 'Multiple-Maniacs-sem-retweet.csv',\n",
              " 'NH10-sem-retweet.csv',\n",
              " 'Night-of-the-Living-Dead-sem-retweet.csv',\n",
              " 'No-Good-Deed-sem-retweet.csv',\n",
              " 'No-One-Lives-sem-retweet.csv',\n",
              " 'Nothing-Bad-Can-Happen-sem-retweet.csv',\n",
              " 'Nothing-Left-to-Fear-sem-retweet.csv',\n",
              " 'November-sem-retweet.csv',\n",
              " 'Octaman-sem-retweet.csv',\n",
              " 'Oculus-sem-retweet.csv',\n",
              " 'One-Cut-of-the-Dead-sem-retweet.csv',\n",
              " 'Only-Lovers-Left-Alive-sem-retweet.csv',\n",
              " 'Open-Grave-sem-retweet.csv',\n",
              " 'Open-Windows-sem-retweet.csv',\n",
              " 'Ouija-Origin-of-Evil-sem-retweet.csv',\n",
              " 'Ouija-sem-retweet.csv',\n",
              " 'Overlord-sem-retweet.csv',\n",
              " 'Paranormal-Activity-The-Ghost-Dimension-sem-retweet.csv',\n",
              " 'Paranormal-Activity-The-Marked-Ones-sem-retweet.csv',\n",
              " 'Personal-Shopper-sem-retweet.csv',\n",
              " 'Pet-Sematary-sem-retweet.csv',\n",
              " 'Pet-sem-retweet.csv',\n",
              " 'Phoenix-Forgotten-sem-retweet.csv',\n",
              " 'Polaroid-sem-retweet.csv',\n",
              " 'Poltergeist-sem-retweet.csv',\n",
              " 'Prey-sem-retweet.csv',\n",
              " 'Pride-and-Prejudice-and-Zombies-sem-retweet.csv',\n",
              " 'REC-4-Apocalypse-sem-retweet.csv',\n",
              " 'Rampant-sem-retweet.csv',\n",
              " 'Range-15-sem-retweet.csv',\n",
              " 'Raw-sem-retweet.csv',\n",
              " 'Raze-sem-retweet.csv',\n",
              " 'Ready-or-Not-sem-retweet.csv',\n",
              " 'Realms-sem-retweet.csv',\n",
              " 'Red-Christmas-sem-retweet.csv',\n",
              " 'Regression-sem-retweet.csv',\n",
              " 'Repentance-sem-retweet.csv',\n",
              " 'Resident-Evil-The-Final-Chapter-sem-retweet.csv',\n",
              " 'Return-to-Nuke-Em-High-Volume-1-sem-retweet.csv',\n",
              " 'Revenge-sem-retweet.csv',\n",
              " 'Rigor-Mortis-sem-retweet.csv',\n",
              " 'Rings-sem-retweet.csv',\n",
              " 'Rottentail-sem-retweet.csv',\n",
              " 'Satanic-sem-retweet.csv',\n",
              " 'Scary-Stories-to-Tell-in-the-Dark-sem-retweet.csv',\n",
              " 'Scouts-Guide-to-the-Zombie-Apocalypse-sem-retweet.csv',\n",
              " 'Shed-of-the-Dead-sem-retweet.csv',\n",
              " 'Shin-Godzilla-sem-retweet.csv',\n",
              " 'Simple-Creature-sem-retweet.csv',\n",
              " 'Sinister-2-sem-retweet.csv',\n",
              " 'Skinless-sem-retweet.csv',\n",
              " 'Slaughterhouse-Rulez-sem-retweet.csv',\n",
              " 'Slender-Man-sem-retweet.csv',\n",
              " 'Slumber-sem-retweet.csv',\n",
              " 'Smoke-Signal-sem-retweet.csv',\n",
              " 'Southbound-sem-retweet.csv',\n",
              " 'Spiders-3D-sem-retweet.csv',\n",
              " 'Split-sem-retweet.csv',\n",
              " 'Spring-sem-retweet.csv',\n",
              " 'Stage-Fright-sem-retweet.csv',\n",
              " 'Starfish-sem-retweet.csv',\n",
              " 'Super-Dark-Times-sem-retweet.csv',\n",
              " 'Suspiria-sem-retweet.csv',\n",
              " 'Tale-of-Tales-sem-retweet.csv',\n",
              " 'Tales-of-Halloween-sem-retweet.csv',\n",
              " 'Texas-Chainsaw-3D-sem-retweet.csv',\n",
              " 'That-Demon-Within-sem-retweet.csv',\n",
              " 'The-ABCs-of-Death-sem-retweet.csv',\n",
              " 'The-Addams-Family-sem-retweet.csv',\n",
              " 'The-Autopsy-of-Jane-Doe-sem-retweet.csv',\n",
              " 'The-Babadook-sem-retweet.csv',\n",
              " 'The-Bad-Batch-sem-retweet.csv',\n",
              " 'The-Belko-Experiment-sem-retweet.csv',\n",
              " 'The-Blackcoats-Daughter-sem-retweet.csv',\n",
              " 'The-Boy-Next-Door-sem-retweet.csv',\n",
              " 'The-Boy-sem-retweet.csv',\n",
              " 'The-Butterfly-Room-sem-retweet.csv',\n",
              " 'The-Bye-Bye-Man-sem-retweet.csv',\n",
              " 'The-Call-sem-retweet.csv',\n",
              " 'The-Channel-sem-retweet.csv',\n",
              " 'The-Charnel-House-sem-retweet.csv',\n",
              " 'The-Church-sem-retweet.csv',\n",
              " 'The-Conjuring-2-sem-retweet.csv',\n",
              " 'The-Conjuring-sem-retweet.csv',\n",
              " 'The-Cured-sem-retweet.csv',\n",
              " 'The-Curse-of-la-Llorona-sem-retweet.csv',\n",
              " 'The-Dark-Below-sem-retweet.csv',\n",
              " 'The-Dark-Tower-sem-retweet.csv',\n",
              " 'The-Darkness-sem-retweet.csv',\n",
              " 'The-Dead-Center-sem-retweet.csv',\n",
              " 'The-Dead-Dont-Die-sem-retweet.csv',\n",
              " 'The-Devil-and-Father-Amorth-sem-retweet.csv',\n",
              " 'The-Devils-Hand-sem-retweet.csv',\n",
              " 'The-Diabolical-sem-retweet.csv',\n",
              " 'The-Disappointments-Room-sem-retweet.csv',\n",
              " 'The-Divine-Fury-sem-retweet.csv',\n",
              " 'The-Endless-sem-retweet.csv',\n",
              " 'The-Eyes-of-My-Mother-sem-retweet.csv',\n",
              " 'The-Fiancé-sem-retweet.csv',\n",
              " 'The-Final-Wish-sem-retweet.csv',\n",
              " 'The-First-Purge-sem-retweet.csv',\n",
              " 'The-Forest-sem-retweet.csv',\n",
              " 'The-Gallows-sem-retweet.csv',\n",
              " 'The-Ghosts-of-Johnson-Woods-sem-retweet.csv',\n",
              " 'The-Giant-Spider-Invasion-sem-retweet.csv',\n",
              " 'The-Golden-Glove-sem-retweet.csv',\n",
              " 'The-Good-Neighbor-sem-retweet.csv',\n",
              " 'The-Gracefield-Incident-sem-retweet.csv',\n",
              " 'The-Greasy-Strangler-sem-retweet.csv',\n",
              " 'The-Green-Inferno-sem-retweet.csv',\n",
              " 'The-Guest-sem-retweet.csv',\n",
              " 'The-Hallow-sem-retweet.csv',\n",
              " 'The-Happy-House-sem-retweet.csv',\n",
              " 'The-Hole-in-the-Ground-sem-retweet.csv',\n",
              " 'The-House-That-Jack-Built-sem-retweet.csv',\n",
              " 'The-House-with-a-Clock-in-Its-Walls-sem-retweet.csv',\n",
              " 'The-Human-Centipede-III-Final-Sequence-sem-retweet.csv',\n",
              " 'The-Intruder-sem-retweet.csv',\n",
              " 'The-Invitation-sem-retweet.csv',\n",
              " 'The-Killing-of-a-Sacred-Deer-sem-retweet.csv',\n",
              " 'The-Last-Days-on-Mars-sem-retweet.csv',\n",
              " 'The-Last-Exorcism-Part-II-sem-retweet.csv',\n",
              " 'The-Lazarus-Effect-sem-retweet.csv',\n",
              " 'The-Lighthouse-sem-retweet.csv',\n",
              " 'The-Little-Stranger-sem-retweet.csv',\n",
              " 'The-Lodgers-sem-retweet.csv',\n",
              " 'The-Lords-of-Salem-sem-retweet.csv',\n",
              " 'The-Love-Witch-sem-retweet.csv',\n",
              " 'The-Lure-sem-retweet.csv',\n",
              " 'The-Meg-sem-retweet.csv',\n",
              " 'The-Monster-sem-retweet.csv',\n",
              " 'The-Mortal-Instruments-City-of-Bones-sem-retweet.csv',\n",
              " 'The-Neon-Demon-sem-retweet.csv',\n",
              " 'The-Night-Eats-the-World-sem-retweet.csv',\n",
              " 'The-Nightmare-sem-retweet.csv',\n",
              " 'The-Nun-sem-retweet.csv',\n",
              " 'The-Old-Dark-House-sem-retweet.csv',\n",
              " 'The-Other-One-sem-retweet.csv',\n",
              " 'The-Other-Side-of-the-Door-sem-retweet.csv',\n",
              " 'The-Pact-sem-retweet.csv',\n",
              " 'The-Perfect-Guy-sem-retweet.csv',\n",
              " 'The-Pit-sem-retweet.csv',\n",
              " 'The-Possession-of-Hannah-Grace-sem-retweet.csv',\n",
              " 'The-Prodigy-sem-retweet.csv',\n",
              " 'The-Purge-Anarchy-sem-retweet.csv',\n",
              " 'The-Purge-Election-Year-sem-retweet.csv',\n",
              " 'The-Purge-sem-retweet.csv',\n",
              " 'The-Pyramid-sem-retweet.csv',\n",
              " 'The-Quiet-Ones-sem-retweet.csv',\n",
              " 'The-Remaining-sem-retweet.csv',\n",
              " 'The-Returned-sem-retweet.csv',\n",
              " 'The-Sacrament-sem-retweet.csv',\n",
              " 'The-Shallows-sem-retweet.csv',\n",
              " 'The-Strange-Color-of-Your-Bodys-Tears-sem-retweet.csv',\n",
              " 'The-Strangers-Prey-at-Night-sem-retweet.csv',\n",
              " 'The-Tag-Along-Devil-Fish-sem-retweet.csv',\n",
              " 'The-Transfiguration-sem-retweet.csv',\n",
              " 'The-Twilight-Zone-A-60th-Anniversary-Celebration-sem-retweet.csv',\n",
              " 'The-Unspoken-sem-retweet.csv',\n",
              " 'The-Untamed-sem-retweet.csv',\n",
              " 'The-Vatican-Tapes-sem-retweet.csv',\n",
              " 'The-Vault-sem-retweet.csv',\n",
              " 'The-Visit-sem-retweet.csv',\n",
              " 'The-Void-sem-retweet.csv',\n",
              " 'The-Wailing-sem-retweet.csv',\n",
              " 'The-Wind-sem-retweet.csv',\n",
              " 'The-Witch-sem-retweet.csv',\n",
              " 'The-Woman-in-Black-2-Angel-of-Death-sem-retweet.csv',\n",
              " 'Thelma-sem-retweet.csv',\n",
              " 'Therapy-for-a-Vampire-sem-retweet.csv',\n",
              " 'Tigers-Are-Not-Afraid-sem-retweet.csv',\n",
              " 'Tragedy-Girls-sem-retweet.csv',\n",
              " 'Train-to-Busan-sem-retweet.csv',\n",
              " 'Turbo-Kid-sem-retweet.csv',\n",
              " 'Tusk-sem-retweet.csv',\n",
              " 'Tyler-Perrys-Boo!-A-Madea-Halloween-sem-retweet.csv',\n",
              " 'Under-the-Shadow-sem-retweet.csv',\n",
              " 'Under-the-Skin-sem-retweet.csv',\n",
              " 'Underworld-Blood-Wars-sem-retweet.csv',\n",
              " 'Unfriended-Dark-Web-sem-retweet.csv',\n",
              " 'Unfriended-sem-retweet.csv',\n",
              " 'Unsane-sem-retweet.csv',\n",
              " 'Unsullied-sem-retweet.csv',\n",
              " 'Upgrade-sem-retweet.csv',\n",
              " 'Us-sem-retweet.csv',\n",
              " 'Vampire-Academy-sem-retweet.csv',\n",
              " 'Warm-Bodies-sem-retweet.csv',\n",
              " 'World-War-Z-sem-retweet.csv',\n",
              " 'sxtape-sem-retweet.csv']"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados_fin_filmes = pd.read_csv('/content/drive/MyDrive/Mestrado/mestrado - base de dados/dados_filme_pre_xgboost_rf_csv.csv', dtype = {'filename': str, 'FILME': str,'ANO': str,'RELEASE DATE': str,'MARKETS': str,'DISTRIBUTOR': str,'GENRE': str,'Drama': bool,'Action': bool,'Comedy': bool,'Horror': bool,'Adventure': bool,'Crime': bool,'Fantasy': bool,'Biography': bool,'Documentary': bool,'Animation': bool,'Thriller': bool,'Mystery': bool,'History': bool,'Sci-Fi': bool,'Romance': bool,'Music': bool,'Family': bool,'Western': bool,'Musical': bool,'War': bool,'MPAA': str,'RUNTIME': str,'ACTOR': str,'CREW': str,'SINOPSE': str,'BUDGET': int,'DOMESTIC_OPENING': int,'DOMESTIC_GROSS': int,'INTERNATIONAL_GROSS': int,'WORLDWIDE_GROSS': int,'BUDGET_DEFLACIONADO': int,'DOMESTIC_OPENING_DEFLACIONADO': int,'DOMESTIC_GROSS_DEFLACIONADO': int,'INTERNATIONAL_GROSS_DEFLACIONADO': int,'WORLDWIDE_GROSS_DEFLACIONADO': int,'SEQUEL': bool,'HAVE_SEQUEL': bool,'IS_SPINOFF': bool,'INFO': str,'SUM_REPLY_COUNT': int,'SUM_RETWEET_COUNT': int,'SUM_LIKE_COUNT': int,'SUM_QUOTE_COUNT': int,'COUNT_TWEET': int},\n",
        "                               engine='python', encoding='utf-8', on_bad_lines='skip')\n",
        "dados_fin_filmes.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_cxPXfwHv3HQ",
        "outputId": "c7fee1e8-b920-40fd-facf-b39313fd1c19"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 406 entries, 0 to 405\n",
            "Data columns (total 51 columns):\n",
            " #   Column                            Non-Null Count  Dtype \n",
            "---  ------                            --------------  ----- \n",
            " 0   filename                          406 non-null    object\n",
            " 1   FILME                             406 non-null    object\n",
            " 2   ANO                               406 non-null    object\n",
            " 3   RELEASE DATE                      406 non-null    object\n",
            " 4   MARKETS                           406 non-null    object\n",
            " 5   DISTRIBUTOR                       406 non-null    object\n",
            " 6   GENRE                             406 non-null    object\n",
            " 7   Drama                             406 non-null    bool  \n",
            " 8   Action                            406 non-null    bool  \n",
            " 9   Comedy                            406 non-null    bool  \n",
            " 10  Horror                            406 non-null    bool  \n",
            " 11  Adventure                         406 non-null    bool  \n",
            " 12  Crime                             406 non-null    bool  \n",
            " 13  Fantasy                           406 non-null    bool  \n",
            " 14  Biography                         406 non-null    bool  \n",
            " 15  Documentary                       406 non-null    bool  \n",
            " 16  Animation                         406 non-null    bool  \n",
            " 17  Thriller                          406 non-null    bool  \n",
            " 18  Mystery                           406 non-null    bool  \n",
            " 19  History                           406 non-null    bool  \n",
            " 20  Sci-Fi                            406 non-null    bool  \n",
            " 21  Romance                           406 non-null    bool  \n",
            " 22  Music                             406 non-null    bool  \n",
            " 23  Family                            406 non-null    bool  \n",
            " 24  Western                           406 non-null    bool  \n",
            " 25  Musical                           406 non-null    bool  \n",
            " 26  War                               406 non-null    bool  \n",
            " 27  MPAA                              406 non-null    object\n",
            " 28  RUNTIME                           406 non-null    object\n",
            " 29  ACTOR                             406 non-null    object\n",
            " 30  CREW                              406 non-null    object\n",
            " 31  SINOPSE                           406 non-null    object\n",
            " 32  BUDGET                            406 non-null    int64 \n",
            " 33  DOMESTIC_OPENING                  406 non-null    int64 \n",
            " 34  DOMESTIC_GROSS                    406 non-null    int64 \n",
            " 35  INTERNATIONAL_GROSS               406 non-null    int64 \n",
            " 36  WORLDWIDE_GROSS                   406 non-null    int64 \n",
            " 37  BUDGET_DEFLACIONADO               406 non-null    int64 \n",
            " 38  DOMESTIC_OPENING_DEFLACIONADO     406 non-null    int64 \n",
            " 39  DOMESTIC_GROSS_DEFLACIONADO       406 non-null    int64 \n",
            " 40  INTERNATIONAL_GROSS_DEFLACIONADO  406 non-null    int64 \n",
            " 41  WORLDWIDE_GROSS_DEFLACIONADO      406 non-null    int64 \n",
            " 42  SEQUEL                            406 non-null    bool  \n",
            " 43  HAVE_SEQUEL                       406 non-null    bool  \n",
            " 44  IS_SPINOFF                        406 non-null    bool  \n",
            " 45  INFO                              33 non-null     object\n",
            " 46  SUM_REPLY_COUNT                   406 non-null    int64 \n",
            " 47  SUM_RETWEET_COUNT                 406 non-null    int64 \n",
            " 48  SUM_LIKE_COUNT                    406 non-null    int64 \n",
            " 49  SUM_QUOTE_COUNT                   406 non-null    int64 \n",
            " 50  COUNT_TWEET                       406 non-null    int64 \n",
            "dtypes: bool(23), int64(15), object(13)\n",
            "memory usage: 98.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados_fin_filmes.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "cU8KobRuwCwa",
        "outputId": "ba4a4e81-2d05-4367-ceee-365599b6eba1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                              filename                FILME   ANO  \\\n",
              "0  10-Cloverfield-Lane-sem-retweet.csv  10 Cloverfield Lane  2016   \n",
              "1    100-Acres-of-Hell-sem-retweet.csv    100 Acres of Hell  2019   \n",
              "2     100-Bloody-Acres-sem-retweet.csv     100 Bloody Acres  2012   \n",
              "3              13-Sins-sem-retweet.csv              13 Sins  2014   \n",
              "4          1920-London-sem-retweet.csv          1920 London  2016   \n",
              "\n",
              "       RELEASE DATE         MARKETS             DISTRIBUTOR  \\\n",
              "0    March 10  2016      APAC  EMEA      Paramount Pictures   \n",
              "1  October 11  2019        Domestic        Indican Pictures   \n",
              "2     June 28  2013        Domestic  Doppelganger Releasing   \n",
              "3    April 11  2014          Poland              RADiUS-TWC   \n",
              "4       May 6  2016  Domestic  EMEA          Reliance Films   \n",
              "\n",
              "                                          GENRE  Drama  Action  Comedy  ...  \\\n",
              "0  Drama | Horror | Mystery | Sci-Fi | Thriller   True   False   False  ...   \n",
              "1  Action | Crime | Horror | Mystery | Thriller  False    True   False  ...   \n",
              "2                               Comedy | Horror  False   False    True  ...   \n",
              "3                             Horror | Thriller  False   False   False  ...   \n",
              "4                              Horror | Mystery  False   False   False  ...   \n",
              "\n",
              "   WORLDWIDE_GROSS_DEFLACIONADO  SEQUEL  HAVE_SEQUEL  IS_SPINOFF  INFO  \\\n",
              "0                     117306493    True         True       False   NaN   \n",
              "1                          5152   False        False       False   NaN   \n",
              "2                          7109   False        False       False   NaN   \n",
              "3                        892435   False        False       False   NaN   \n",
              "4                         17111    True         True       False   NaN   \n",
              "\n",
              "   SUM_REPLY_COUNT  SUM_RETWEET_COUNT  SUM_LIKE_COUNT  SUM_QUOTE_COUNT  \\\n",
              "0             7513              19935           51279               17   \n",
              "1                5                 14              22                2   \n",
              "2               72                199              72                0   \n",
              "3              113                258             290                0   \n",
              "4              142                524            1300                7   \n",
              "\n",
              "   COUNT_TWEET  \n",
              "0        36963  \n",
              "1           30  \n",
              "2          548  \n",
              "3          987  \n",
              "4         2417  \n",
              "\n",
              "[5 rows x 51 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-74d41f66-6ff1-4bd4-aa96-bd0d35468c5b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>filename</th>\n",
              "      <th>FILME</th>\n",
              "      <th>ANO</th>\n",
              "      <th>RELEASE DATE</th>\n",
              "      <th>MARKETS</th>\n",
              "      <th>DISTRIBUTOR</th>\n",
              "      <th>GENRE</th>\n",
              "      <th>Drama</th>\n",
              "      <th>Action</th>\n",
              "      <th>Comedy</th>\n",
              "      <th>...</th>\n",
              "      <th>WORLDWIDE_GROSS_DEFLACIONADO</th>\n",
              "      <th>SEQUEL</th>\n",
              "      <th>HAVE_SEQUEL</th>\n",
              "      <th>IS_SPINOFF</th>\n",
              "      <th>INFO</th>\n",
              "      <th>SUM_REPLY_COUNT</th>\n",
              "      <th>SUM_RETWEET_COUNT</th>\n",
              "      <th>SUM_LIKE_COUNT</th>\n",
              "      <th>SUM_QUOTE_COUNT</th>\n",
              "      <th>COUNT_TWEET</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10-Cloverfield-Lane-sem-retweet.csv</td>\n",
              "      <td>10 Cloverfield Lane</td>\n",
              "      <td>2016</td>\n",
              "      <td>March 10  2016</td>\n",
              "      <td>APAC  EMEA</td>\n",
              "      <td>Paramount Pictures</td>\n",
              "      <td>Drama | Horror | Mystery | Sci-Fi | Thriller</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>117306493</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7513</td>\n",
              "      <td>19935</td>\n",
              "      <td>51279</td>\n",
              "      <td>17</td>\n",
              "      <td>36963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100-Acres-of-Hell-sem-retweet.csv</td>\n",
              "      <td>100 Acres of Hell</td>\n",
              "      <td>2019</td>\n",
              "      <td>October 11  2019</td>\n",
              "      <td>Domestic</td>\n",
              "      <td>Indican Pictures</td>\n",
              "      <td>Action | Crime | Horror | Mystery | Thriller</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>5152</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>100-Bloody-Acres-sem-retweet.csv</td>\n",
              "      <td>100 Bloody Acres</td>\n",
              "      <td>2012</td>\n",
              "      <td>June 28  2013</td>\n",
              "      <td>Domestic</td>\n",
              "      <td>Doppelganger Releasing</td>\n",
              "      <td>Comedy | Horror</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>...</td>\n",
              "      <td>7109</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>72</td>\n",
              "      <td>199</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>548</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>13-Sins-sem-retweet.csv</td>\n",
              "      <td>13 Sins</td>\n",
              "      <td>2014</td>\n",
              "      <td>April 11  2014</td>\n",
              "      <td>Poland</td>\n",
              "      <td>RADiUS-TWC</td>\n",
              "      <td>Horror | Thriller</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>892435</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>113</td>\n",
              "      <td>258</td>\n",
              "      <td>290</td>\n",
              "      <td>0</td>\n",
              "      <td>987</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1920-London-sem-retweet.csv</td>\n",
              "      <td>1920 London</td>\n",
              "      <td>2016</td>\n",
              "      <td>May 6  2016</td>\n",
              "      <td>Domestic  EMEA</td>\n",
              "      <td>Reliance Films</td>\n",
              "      <td>Horror | Mystery</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>17111</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>142</td>\n",
              "      <td>524</td>\n",
              "      <td>1300</td>\n",
              "      <td>7</td>\n",
              "      <td>2417</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 51 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74d41f66-6ff1-4bd4-aa96-bd0d35468c5b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-74d41f66-6ff1-4bd4-aa96-bd0d35468c5b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-74d41f66-6ff1-4bd4-aa96-bd0d35468c5b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-987e8d34-71c1-4f40-8fda-bb643ad27c78\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-987e8d34-71c1-4f40-8fda-bb643ad27c78')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-987e8d34-71c1-4f40-8fda-bb643ad27c78 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dados_fin_filmes"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dados_fin_filmes = dados_fin_filmes[['filename', 'FILME', 'ANO', 'RELEASE DATE', 'MARKETS', 'DISTRIBUTOR', 'GENRE', 'Drama', 'Action', 'Comedy', 'Horror', 'Adventure', 'Crime', 'Fantasy', 'Biography', 'Documentary', 'Animation', 'Thriller', 'Mystery', 'History', 'Sci-Fi', 'Romance', 'Music', 'Family', 'Western', 'Musical', 'War', 'MPAA', 'RUNTIME', 'ACTOR', 'CREW', 'SINOPSE', 'BUDGET', 'DOMESTIC_OPENING', 'DOMESTIC_GROSS', 'INTERNATIONAL_GROSS', 'WORLDWIDE_GROSS', 'BUDGET_DEFLACIONADO', 'DOMESTIC_OPENING_DEFLACIONADO', 'DOMESTIC_GROSS_DEFLACIONADO', 'INTERNATIONAL_GROSS_DEFLACIONADO', 'WORLDWIDE_GROSS_DEFLACIONADO', 'SEQUEL', 'HAVE_SEQUEL', 'IS_SPINOFF', 'INFO']]\n",
        "dados_fin_filmes.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "TULRKAKKwH_p",
        "outputId": "ec61f8db-8aa4-4909-9fb3-6e3ace870e2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                              filename                FILME   ANO  \\\n",
              "0  10-Cloverfield-Lane-sem-retweet.csv  10 Cloverfield Lane  2016   \n",
              "1    100-Acres-of-Hell-sem-retweet.csv    100 Acres of Hell  2019   \n",
              "2     100-Bloody-Acres-sem-retweet.csv     100 Bloody Acres  2012   \n",
              "3              13-Sins-sem-retweet.csv              13 Sins  2014   \n",
              "4          1920-London-sem-retweet.csv          1920 London  2016   \n",
              "\n",
              "       RELEASE DATE         MARKETS             DISTRIBUTOR  \\\n",
              "0    March 10  2016      APAC  EMEA      Paramount Pictures   \n",
              "1  October 11  2019        Domestic        Indican Pictures   \n",
              "2     June 28  2013        Domestic  Doppelganger Releasing   \n",
              "3    April 11  2014          Poland              RADiUS-TWC   \n",
              "4       May 6  2016  Domestic  EMEA          Reliance Films   \n",
              "\n",
              "                                          GENRE  Drama  Action  Comedy  ...  \\\n",
              "0  Drama | Horror | Mystery | Sci-Fi | Thriller   True   False   False  ...   \n",
              "1  Action | Crime | Horror | Mystery | Thriller  False    True   False  ...   \n",
              "2                               Comedy | Horror  False   False    True  ...   \n",
              "3                             Horror | Thriller  False   False   False  ...   \n",
              "4                              Horror | Mystery  False   False   False  ...   \n",
              "\n",
              "   WORLDWIDE_GROSS  BUDGET_DEFLACIONADO  DOMESTIC_OPENING_DEFLACIONADO  \\\n",
              "0        110216998                    0                       26317981   \n",
              "1             5152                    0                            997   \n",
              "2             6388                    0                           3805   \n",
              "3           826913                    0                           9994   \n",
              "4            16077                    0                              0   \n",
              "\n",
              "   DOMESTIC_GROSS_DEFLACIONADO  INTERNATIONAL_GROSS_DEFLACIONADO  \\\n",
              "0                     76719597                          40586896   \n",
              "1                         5152                                 0   \n",
              "2                         7109                                 0   \n",
              "3                        14903                            877532   \n",
              "4                            0                             17111   \n",
              "\n",
              "   WORLDWIDE_GROSS_DEFLACIONADO  SEQUEL  HAVE_SEQUEL  IS_SPINOFF  INFO  \n",
              "0                     117306493    True         True       False   NaN  \n",
              "1                          5152   False        False       False   NaN  \n",
              "2                          7109   False        False       False   NaN  \n",
              "3                        892435   False        False       False   NaN  \n",
              "4                         17111    True         True       False   NaN  \n",
              "\n",
              "[5 rows x 46 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8660e4e8-c873-4731-b5cf-bb505bc967e6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>filename</th>\n",
              "      <th>FILME</th>\n",
              "      <th>ANO</th>\n",
              "      <th>RELEASE DATE</th>\n",
              "      <th>MARKETS</th>\n",
              "      <th>DISTRIBUTOR</th>\n",
              "      <th>GENRE</th>\n",
              "      <th>Drama</th>\n",
              "      <th>Action</th>\n",
              "      <th>Comedy</th>\n",
              "      <th>...</th>\n",
              "      <th>WORLDWIDE_GROSS</th>\n",
              "      <th>BUDGET_DEFLACIONADO</th>\n",
              "      <th>DOMESTIC_OPENING_DEFLACIONADO</th>\n",
              "      <th>DOMESTIC_GROSS_DEFLACIONADO</th>\n",
              "      <th>INTERNATIONAL_GROSS_DEFLACIONADO</th>\n",
              "      <th>WORLDWIDE_GROSS_DEFLACIONADO</th>\n",
              "      <th>SEQUEL</th>\n",
              "      <th>HAVE_SEQUEL</th>\n",
              "      <th>IS_SPINOFF</th>\n",
              "      <th>INFO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10-Cloverfield-Lane-sem-retweet.csv</td>\n",
              "      <td>10 Cloverfield Lane</td>\n",
              "      <td>2016</td>\n",
              "      <td>March 10  2016</td>\n",
              "      <td>APAC  EMEA</td>\n",
              "      <td>Paramount Pictures</td>\n",
              "      <td>Drama | Horror | Mystery | Sci-Fi | Thriller</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>110216998</td>\n",
              "      <td>0</td>\n",
              "      <td>26317981</td>\n",
              "      <td>76719597</td>\n",
              "      <td>40586896</td>\n",
              "      <td>117306493</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100-Acres-of-Hell-sem-retweet.csv</td>\n",
              "      <td>100 Acres of Hell</td>\n",
              "      <td>2019</td>\n",
              "      <td>October 11  2019</td>\n",
              "      <td>Domestic</td>\n",
              "      <td>Indican Pictures</td>\n",
              "      <td>Action | Crime | Horror | Mystery | Thriller</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>5152</td>\n",
              "      <td>0</td>\n",
              "      <td>997</td>\n",
              "      <td>5152</td>\n",
              "      <td>0</td>\n",
              "      <td>5152</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>100-Bloody-Acres-sem-retweet.csv</td>\n",
              "      <td>100 Bloody Acres</td>\n",
              "      <td>2012</td>\n",
              "      <td>June 28  2013</td>\n",
              "      <td>Domestic</td>\n",
              "      <td>Doppelganger Releasing</td>\n",
              "      <td>Comedy | Horror</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>...</td>\n",
              "      <td>6388</td>\n",
              "      <td>0</td>\n",
              "      <td>3805</td>\n",
              "      <td>7109</td>\n",
              "      <td>0</td>\n",
              "      <td>7109</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>13-Sins-sem-retweet.csv</td>\n",
              "      <td>13 Sins</td>\n",
              "      <td>2014</td>\n",
              "      <td>April 11  2014</td>\n",
              "      <td>Poland</td>\n",
              "      <td>RADiUS-TWC</td>\n",
              "      <td>Horror | Thriller</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>826913</td>\n",
              "      <td>0</td>\n",
              "      <td>9994</td>\n",
              "      <td>14903</td>\n",
              "      <td>877532</td>\n",
              "      <td>892435</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1920-London-sem-retweet.csv</td>\n",
              "      <td>1920 London</td>\n",
              "      <td>2016</td>\n",
              "      <td>May 6  2016</td>\n",
              "      <td>Domestic  EMEA</td>\n",
              "      <td>Reliance Films</td>\n",
              "      <td>Horror | Mystery</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>16077</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17111</td>\n",
              "      <td>17111</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 46 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8660e4e8-c873-4731-b5cf-bb505bc967e6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8660e4e8-c873-4731-b5cf-bb505bc967e6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8660e4e8-c873-4731-b5cf-bb505bc967e6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cbc95868-5fab-4029-a57d-6f74f7efb27b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbc95868-5fab-4029-a57d-6f74f7efb27b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cbc95868-5fab-4029-a57d-6f74f7efb27b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dados_fin_filmes"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "movies_full_info_merged = pd.merge(movies_full_info, dados_fin_filmes, on = \"filename\")"
      ],
      "metadata": {
        "id": "tujH8wQL-iic"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "movies_full_info_merged.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "IyAqE4Svs56p",
        "outputId": "eba7ff0a-762c-4170-cca4-bf9f86f7b95d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                              filename  count_valid_tweets  reply_count  \\\n",
              "0  10-Cloverfield-Lane-sem-retweet.csv               34152         7137   \n",
              "1    100-Acres-of-Hell-sem-retweet.csv                  29            5   \n",
              "2     100-Bloody-Acres-sem-retweet.csv                 533           72   \n",
              "3              13-Sins-sem-retweet.csv                 749           81   \n",
              "4          1920-London-sem-retweet.csv                1959          113   \n",
              "\n",
              "   retweet_count  like_count  quote_count     anger  anticipation   disgust  \\\n",
              "0          18987       49807           16  0.030253      0.285267  0.030638   \n",
              "1             14          22            2  0.038646      0.233765  0.058740   \n",
              "2            195          68            0  0.036060      0.333602  0.042019   \n",
              "3             73         190            0  0.066029      0.227398  0.073734   \n",
              "4            484        1142            7  0.020444      0.291011  0.028198   \n",
              "\n",
              "       fear  ...  WORLDWIDE_GROSS  BUDGET_DEFLACIONADO  \\\n",
              "0  0.067985  ...        110216998                    0   \n",
              "1  0.489303  ...             5152                    0   \n",
              "2  0.105184  ...             6388                    0   \n",
              "3  0.073973  ...           826913                    0   \n",
              "4  0.115785  ...            16077                    0   \n",
              "\n",
              "   DOMESTIC_OPENING_DEFLACIONADO  DOMESTIC_GROSS_DEFLACIONADO  \\\n",
              "0                       26317981                     76719597   \n",
              "1                            997                         5152   \n",
              "2                           3805                         7109   \n",
              "3                           9994                        14903   \n",
              "4                              0                            0   \n",
              "\n",
              "   INTERNATIONAL_GROSS_DEFLACIONADO  WORLDWIDE_GROSS_DEFLACIONADO  SEQUEL  \\\n",
              "0                          40586896                     117306493    True   \n",
              "1                                 0                          5152   False   \n",
              "2                                 0                          7109   False   \n",
              "3                            877532                        892435   False   \n",
              "4                             17111                         17111    True   \n",
              "\n",
              "   HAVE_SEQUEL  IS_SPINOFF  INFO  \n",
              "0         True       False   NaN  \n",
              "1        False       False   NaN  \n",
              "2        False       False   NaN  \n",
              "3        False       False   NaN  \n",
              "4         True       False   NaN  \n",
              "\n",
              "[5 rows x 65 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-73b4a21a-6ef4-4792-8b6e-edb8fe556cbb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>filename</th>\n",
              "      <th>count_valid_tweets</th>\n",
              "      <th>reply_count</th>\n",
              "      <th>retweet_count</th>\n",
              "      <th>like_count</th>\n",
              "      <th>quote_count</th>\n",
              "      <th>anger</th>\n",
              "      <th>anticipation</th>\n",
              "      <th>disgust</th>\n",
              "      <th>fear</th>\n",
              "      <th>...</th>\n",
              "      <th>WORLDWIDE_GROSS</th>\n",
              "      <th>BUDGET_DEFLACIONADO</th>\n",
              "      <th>DOMESTIC_OPENING_DEFLACIONADO</th>\n",
              "      <th>DOMESTIC_GROSS_DEFLACIONADO</th>\n",
              "      <th>INTERNATIONAL_GROSS_DEFLACIONADO</th>\n",
              "      <th>WORLDWIDE_GROSS_DEFLACIONADO</th>\n",
              "      <th>SEQUEL</th>\n",
              "      <th>HAVE_SEQUEL</th>\n",
              "      <th>IS_SPINOFF</th>\n",
              "      <th>INFO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10-Cloverfield-Lane-sem-retweet.csv</td>\n",
              "      <td>34152</td>\n",
              "      <td>7137</td>\n",
              "      <td>18987</td>\n",
              "      <td>49807</td>\n",
              "      <td>16</td>\n",
              "      <td>0.030253</td>\n",
              "      <td>0.285267</td>\n",
              "      <td>0.030638</td>\n",
              "      <td>0.067985</td>\n",
              "      <td>...</td>\n",
              "      <td>110216998</td>\n",
              "      <td>0</td>\n",
              "      <td>26317981</td>\n",
              "      <td>76719597</td>\n",
              "      <td>40586896</td>\n",
              "      <td>117306493</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100-Acres-of-Hell-sem-retweet.csv</td>\n",
              "      <td>29</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "      <td>0.038646</td>\n",
              "      <td>0.233765</td>\n",
              "      <td>0.058740</td>\n",
              "      <td>0.489303</td>\n",
              "      <td>...</td>\n",
              "      <td>5152</td>\n",
              "      <td>0</td>\n",
              "      <td>997</td>\n",
              "      <td>5152</td>\n",
              "      <td>0</td>\n",
              "      <td>5152</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>100-Bloody-Acres-sem-retweet.csv</td>\n",
              "      <td>533</td>\n",
              "      <td>72</td>\n",
              "      <td>195</td>\n",
              "      <td>68</td>\n",
              "      <td>0</td>\n",
              "      <td>0.036060</td>\n",
              "      <td>0.333602</td>\n",
              "      <td>0.042019</td>\n",
              "      <td>0.105184</td>\n",
              "      <td>...</td>\n",
              "      <td>6388</td>\n",
              "      <td>0</td>\n",
              "      <td>3805</td>\n",
              "      <td>7109</td>\n",
              "      <td>0</td>\n",
              "      <td>7109</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>13-Sins-sem-retweet.csv</td>\n",
              "      <td>749</td>\n",
              "      <td>81</td>\n",
              "      <td>73</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "      <td>0.066029</td>\n",
              "      <td>0.227398</td>\n",
              "      <td>0.073734</td>\n",
              "      <td>0.073973</td>\n",
              "      <td>...</td>\n",
              "      <td>826913</td>\n",
              "      <td>0</td>\n",
              "      <td>9994</td>\n",
              "      <td>14903</td>\n",
              "      <td>877532</td>\n",
              "      <td>892435</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1920-London-sem-retweet.csv</td>\n",
              "      <td>1959</td>\n",
              "      <td>113</td>\n",
              "      <td>484</td>\n",
              "      <td>1142</td>\n",
              "      <td>7</td>\n",
              "      <td>0.020444</td>\n",
              "      <td>0.291011</td>\n",
              "      <td>0.028198</td>\n",
              "      <td>0.115785</td>\n",
              "      <td>...</td>\n",
              "      <td>16077</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>17111</td>\n",
              "      <td>17111</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 65 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73b4a21a-6ef4-4792-8b6e-edb8fe556cbb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-73b4a21a-6ef4-4792-8b6e-edb8fe556cbb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-73b4a21a-6ef4-4792-8b6e-edb8fe556cbb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-40a3d99e-a765-4f15-96cb-269a044e4a2f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40a3d99e-a765-4f15-96cb-269a044e4a2f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-40a3d99e-a765-4f15-96cb-269a044e4a2f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "movies_full_info_merged"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "movies_full_info_merged.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "89avfY2Ps7ot",
        "outputId": "b89d613a-c215-4574-b703-5097c3599aa3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 386 entries, 0 to 385\n",
            "Data columns (total 65 columns):\n",
            " #   Column                            Non-Null Count  Dtype  \n",
            "---  ------                            --------------  -----  \n",
            " 0   filename                          386 non-null    object \n",
            " 1   count_valid_tweets                386 non-null    int64  \n",
            " 2   reply_count                       386 non-null    int64  \n",
            " 3   retweet_count                     386 non-null    int64  \n",
            " 4   like_count                        386 non-null    int64  \n",
            " 5   quote_count                       386 non-null    int64  \n",
            " 6   anger                             386 non-null    float64\n",
            " 7   anticipation                      386 non-null    float64\n",
            " 8   disgust                           386 non-null    float64\n",
            " 9   fear                              386 non-null    float64\n",
            " 10  joy                               386 non-null    float64\n",
            " 11  love                              386 non-null    float64\n",
            " 12  optimism                          386 non-null    float64\n",
            " 13  pessimism                         386 non-null    float64\n",
            " 14  sadness                           386 non-null    float64\n",
            " 15  surprise                          386 non-null    float64\n",
            " 16  trust                             386 non-null    float64\n",
            " 17  negative                          386 non-null    float64\n",
            " 18  neutral                           386 non-null    float64\n",
            " 19  positive                          386 non-null    float64\n",
            " 20  FILME                             386 non-null    object \n",
            " 21  ANO                               386 non-null    object \n",
            " 22  RELEASE DATE                      386 non-null    object \n",
            " 23  MARKETS                           386 non-null    object \n",
            " 24  DISTRIBUTOR                       386 non-null    object \n",
            " 25  GENRE                             386 non-null    object \n",
            " 26  Drama                             386 non-null    bool   \n",
            " 27  Action                            386 non-null    bool   \n",
            " 28  Comedy                            386 non-null    bool   \n",
            " 29  Horror                            386 non-null    bool   \n",
            " 30  Adventure                         386 non-null    bool   \n",
            " 31  Crime                             386 non-null    bool   \n",
            " 32  Fantasy                           386 non-null    bool   \n",
            " 33  Biography                         386 non-null    bool   \n",
            " 34  Documentary                       386 non-null    bool   \n",
            " 35  Animation                         386 non-null    bool   \n",
            " 36  Thriller                          386 non-null    bool   \n",
            " 37  Mystery                           386 non-null    bool   \n",
            " 38  History                           386 non-null    bool   \n",
            " 39  Sci-Fi                            386 non-null    bool   \n",
            " 40  Romance                           386 non-null    bool   \n",
            " 41  Music                             386 non-null    bool   \n",
            " 42  Family                            386 non-null    bool   \n",
            " 43  Western                           386 non-null    bool   \n",
            " 44  Musical                           386 non-null    bool   \n",
            " 45  War                               386 non-null    bool   \n",
            " 46  MPAA                              386 non-null    object \n",
            " 47  RUNTIME                           386 non-null    object \n",
            " 48  ACTOR                             386 non-null    object \n",
            " 49  CREW                              386 non-null    object \n",
            " 50  SINOPSE                           386 non-null    object \n",
            " 51  BUDGET                            386 non-null    int64  \n",
            " 52  DOMESTIC_OPENING                  386 non-null    int64  \n",
            " 53  DOMESTIC_GROSS                    386 non-null    int64  \n",
            " 54  INTERNATIONAL_GROSS               386 non-null    int64  \n",
            " 55  WORLDWIDE_GROSS                   386 non-null    int64  \n",
            " 56  BUDGET_DEFLACIONADO               386 non-null    int64  \n",
            " 57  DOMESTIC_OPENING_DEFLACIONADO     386 non-null    int64  \n",
            " 58  DOMESTIC_GROSS_DEFLACIONADO       386 non-null    int64  \n",
            " 59  INTERNATIONAL_GROSS_DEFLACIONADO  386 non-null    int64  \n",
            " 60  WORLDWIDE_GROSS_DEFLACIONADO      386 non-null    int64  \n",
            " 61  SEQUEL                            386 non-null    bool   \n",
            " 62  HAVE_SEQUEL                       386 non-null    bool   \n",
            " 63  IS_SPINOFF                        386 non-null    bool   \n",
            " 64  INFO                              32 non-null     object \n",
            "dtypes: bool(23), float64(14), int64(15), object(13)\n",
            "memory usage: 138.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "movies_full_info_merged.to_csv('movies_full_info_merged.csv', encoding='utf-8')"
      ],
      "metadata": {
        "id": "MEVWVgRRei-X"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "X4h7tlBFlVf1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "sRSVzLN9enGl"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "gpuType": "T4",
      "machine_shape": "hm",
      "provenance": [],
      "mount_file_id": "1iLSxs4s9BhlTeGDPTR9bx2fFP28E_oHs",
      "authorship_tag": "ABX9TyN87ZkdzIyJfcQTFlFVhKh5",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}